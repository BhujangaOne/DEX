{
  "contractName": "Dex",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextOrderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderBook",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "tokenMapping",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        }
      ],
      "name": "getOrderBook",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "trader",
              "type": "address"
            },
            {
              "internalType": "enum Dex.Side",
              "name": "side",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "ticker",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "internalType": "struct Dex.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "enum Dex.Side",
          "name": "side",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "ticker",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "createLimitOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createLimitOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"}],\"name\":\"getOrderBook\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct Dex.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderBook\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"internalType\":\"enum Dex.Side\",\"name\":\"side\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenMapping\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"ticker\",\"type\":\"bytes32\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/sound/Desktop/EthProjects/DEX/contracts/Dex.sol\":\"Dex\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sound/Desktop/EthProjects/DEX/contracts/Dex.sol\":{\"keccak256\":\"0x482934faf6cbb7589fa86b8addbe7b3a4da428b38a065992d6ee4aa161a60f3a\",\"urls\":[\"bzz-raw://d3e3fbba4714f9e7eafe7bd2f47740a41cb527aef1fe49d2ccb8f85eac96dad0\",\"dweb:/ipfs/QmdrRoa53ofKR8FfTARWNFJL2XxrHGduCbzCAg2HQNp1xn\"]},\"/C/Users/sound/Desktop/EthProjects/DEX/contracts/Wallet.sol\":{\"keccak256\":\"0x62a37ede41e5a28ecb38802b8c0388f2fc89e6478895daa8fcab79405d795fc1\",\"urls\":[\"bzz-raw://572371abbc72bac715db6b3a206453860be33f353ed8714dbdf7b2e7ddbe9468\",\"dweb:/ipfs/QmPsgZh777uEXUxuB6kuNn7uXzq2Mm2boikgSqtvKxJW82\"]},\"/C/Users/sound/Desktop/EthProjects/DEX/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"/C/Users/sound/Desktop/EthProjects/DEX/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"/C/Users/sound/Desktop/EthProjects/DEX/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"/C/Users/sound/Desktop/EthProjects/DEX/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060045534801561001557600080fd5b5060006100266100c960201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100d1565b600033905090565b612697806100e06000396000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063ba58ea6811610059578063ba58ea68146102d9578063c311d04914610316578063c9630cb01461033f578063f2fde38b14610368576100e8565b80638da5cb5b1461021f5780639776aacf1461024a5780639ead722214610273578063a8d2021a146102b0576100e8565b8063439370b1116100c6578063439370b114610197578063667cb4ba146101a15780636f3b62f9146101df578063715018a614610208576100e8565b80630bb431b6146100ed5780631f14df691461012f5780632a58b3301461016c575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611ffd565b610391565b6040516101269695949392919061248e565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190611f20565b610424565b6040516101639190612473565b60405180910390f35b34801561017857600080fd5b50610181610449565b60405161018e9190612473565b60405180910390f35b61019f61044f565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190611f5c565b610548565b6040516101d69291906123ea565b60405180910390f35b3480156101eb57600080fd5b506102066004803603810190610201919061204c565b61058c565b005b34801561021457600080fd5b5061021d610eca565b005b34801561022b57600080fd5b50610234611037565b6040516102419190612392565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190611f85565b611060565b005b34801561027f57600080fd5b5061029a600480360381019061029591906120af565b6111ce565b6040516102a791906123cf565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d291906120d8565b6111f2565b005b3480156102e557600080fd5b5061030060048036038101906102fb9190611fc1565b611531565b60405161030d91906123ad565b60405180910390f35b34801561032257600080fd5b5061033d600480360381019061033891906120af565b61166b565b005b34801561034b57600080fd5b50610366600480360381019061036191906120d8565b611881565b005b34801561037457600080fd5b5061038f600480360381019061038a9190611ef7565b611b18565b005b600560205282600052604060002060205281600052604060002081815481106103b957600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b6104d234600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611d0a90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000600181111561059957fe5b8460018111156105a557fe5b1415610675576105be8183611d9290919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020541015610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790612433565b60405180910390fd5b610728565b60018081111561068157fe5b84600181111561068d57fe5b14156107275781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020541015610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90612453565b60405180910390fd5b5b5b600060056000858152602001908152602001600020600086600181111561074b57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561079757fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600181111561084a57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155505060008082805490501161088357600061088c565b60018280549050035b90506000600181111561089b57fe5b8660018111156108a757fe5b1415610ba1575b6000811115610b9c578181815481106108c357fe5b9060005260206000209060050201600401548260018303815481106108e457fe5b906000526020600020906005020160040154111561090157610b9c565b600082600183038154811061091257fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156109a957fe5b60018111156109b457fe5b8152602001600282015481526020016003820154815260200160048201548152505090508282815481106109e457fe5b9060005260206000209060050201836001840381548110610a0157fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610ab157fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080838381548110610ae457fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610b6757fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050818060019003925050506108ae565b610eb0565b600180811115610bad57fe5b866001811115610bb957fe5b1415610eaf575b6000811115610eae57818181548110610bd557fe5b906000526020600020906005020160040154826001830381548110610bf657fe5b9060005260206000209060050201600401541015610c1357610eae565b6000826001830381548110610c2457fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610cbb57fe5b6001811115610cc657fe5b815260200160028201548152602001600382015481526020016004820154815250509050828281548110610cf657fe5b9060005260206000209060050201836001840381548110610d1357fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610dc357fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080838381548110610df657fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610e7957fe5b0217905550606082015181600201556080820151816003015560a0820151816004015590505081806001900392505050610bc0565b5b5b600460008154809291906001019190505550505050505050565b610ed2611e18565b73ffffffffffffffffffffffffffffffffffffffff16610ef0611037565b73ffffffffffffffffffffffffffffffffffffffff1614610f79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611068611e18565b73ffffffffffffffffffffffffffffffffffffffff16611086611037565b73ffffffffffffffffffffffffffffffffffffffff161461110f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600181815481106111de57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015611392576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f42616c616e63657320696e73756666696369656e74210000000000000000000081525060200191505060405180910390fd5b6113f583600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611e2090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156114f057600080fd5b505af1158015611504573d6000803e3d6000fd5b505050506040513d602081101561151a57600080fd5b810190808051906020019092919050505050505050565b606060056000848152602001908152602001600020600083600181111561155457fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561165f57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561162357fe5b600181111561162e57fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190611582565b50505050905092915050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590612413565b60405180910390fd5b6117a181600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611e2090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16816040516118399061237d565b60006040518083038185875af1925050503d8060008114611876576040519150601f19603f3d011682016040523d82523d6000602084013e61187b565b606091505b50505050565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561195b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b505050506040513d6020811015611a4a57600080fd5b810190808051906020019092919050505050611abf83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611d0a90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b611b20611e18565b73ffffffffffffffffffffffffffffffffffffffff16611b3e611037565b73ffffffffffffffffffffffffffffffffffffffff1614611bc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061261b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611da55760009050611e12565b6000828402905082848281611db657fe5b0414611e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126416021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600082821115611e98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600081359050611eb2816125c5565b92915050565b600081359050611ec7816125dc565b92915050565b600081359050611edc816125f3565b92915050565b600081359050611ef181612603565b92915050565b600060208284031215611f0957600080fd5b6000611f1784828501611ea3565b91505092915050565b60008060408385031215611f3357600080fd5b6000611f4185828601611ea3565b9250506020611f5285828601611eb8565b9150509250929050565b600060208284031215611f6e57600080fd5b6000611f7c84828501611eb8565b91505092915050565b60008060408385031215611f9857600080fd5b6000611fa685828601611eb8565b9250506020611fb785828601611ea3565b9150509250929050565b60008060408385031215611fd457600080fd5b6000611fe285828601611eb8565b9250506020611ff385828601611ecd565b9150509250929050565b60008060006060848603121561201257600080fd5b600061202086828701611eb8565b935050602061203186828701611ee2565b925050604061204286828701611ee2565b9150509250925092565b6000806000806080858703121561206257600080fd5b600061207087828801611ecd565b945050602061208187828801611eb8565b935050604061209287828801611ee2565b92505060606120a387828801611ee2565b91505092959194509250565b6000602082840312156120c157600080fd5b60006120cf84828501611ee2565b91505092915050565b600080604083850312156120eb57600080fd5b60006120f985828601611ee2565b925050602061210a85828601611eb8565b9150509250929050565b600061212083836122e4565b60c08301905092915050565b61213581612544565b82525050565b61214481612544565b82525050565b6000612155826124ff565b61215f8185612517565b935061216a836124ef565b8060005b8381101561219b5781516121828882612114565b975061218d8361250a565b92505060018101905061216e565b5085935050505092915050565b6121b181612556565b82525050565b6121c081612556565b82525050565b6121cf8161259d565b82525050565b6121de8161259d565b82525050565b60006121f1601283612533565b91507f496e7375666669656e742062616c616e636500000000000000000000000000006000830152602082019050919050565b6000612231600083612528565b9150600082019050919050565b600061224b602883612533565b91507f496e73756666696369656e742066756e647320746f206372656174652074686960008301527f73206f72646572210000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122b1601a83612533565b91507f496e73756666696369656e7420746f6b656e20616d6f756e74210000000000006000830152602082019050919050565b60c0820160008201516122fa600085018261235f565b50602082015161230d602085018261212c565b50604082015161232060408501826121c6565b50606082015161233360608501826121a8565b506080820151612346608085018261235f565b5060a082015161235960a085018261235f565b50505050565b61236881612593565b82525050565b61237781612593565b82525050565b600061238882612224565b9150819050919050565b60006020820190506123a7600083018461213b565b92915050565b600060208201905081810360008301526123c7818461214a565b905092915050565b60006020820190506123e460008301846121b7565b92915050565b60006040820190506123ff60008301856121b7565b61240c602083018461213b565b9392505050565b6000602082019050818103600083015261242c816121e4565b9050919050565b6000602082019050818103600083015261244c8161223e565b9050919050565b6000602082019050818103600083015261246c816122a4565b9050919050565b6000602082019050612488600083018461236e565b92915050565b600060c0820190506124a3600083018961236e565b6124b0602083018861213b565b6124bd60408301876121d5565b6124ca60608301866121b7565b6124d7608083018561236e565b6124e460a083018461236e565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061254f82612573565b9050919050565b6000819050919050565b600081905061256e826125b1565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125a882612560565b9050919050565bfe5b600281106125c2576125c16125af565b5b50565b6125ce81612544565b81146125d957600080fd5b50565b6125e581612556565b81146125f057600080fd5b50565b6002811061260057600080fd5b50565b61260c81612593565b811461261757600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220977c52b7d4281cfac0a700838972386058916d64c524e233dd79eb3aaba9ad4664736f6c63430007060033",
  "deployedBytecode": "0x6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063ba58ea6811610059578063ba58ea68146102d9578063c311d04914610316578063c9630cb01461033f578063f2fde38b14610368576100e8565b80638da5cb5b1461021f5780639776aacf1461024a5780639ead722214610273578063a8d2021a146102b0576100e8565b8063439370b1116100c6578063439370b114610197578063667cb4ba146101a15780636f3b62f9146101df578063715018a614610208576100e8565b80630bb431b6146100ed5780631f14df691461012f5780632a58b3301461016c575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611ffd565b610391565b6040516101269695949392919061248e565b60405180910390f35b34801561013b57600080fd5b5061015660048036038101906101519190611f20565b610424565b6040516101639190612473565b60405180910390f35b34801561017857600080fd5b50610181610449565b60405161018e9190612473565b60405180910390f35b61019f61044f565b005b3480156101ad57600080fd5b506101c860048036038101906101c39190611f5c565b610548565b6040516101d69291906123ea565b60405180910390f35b3480156101eb57600080fd5b506102066004803603810190610201919061204c565b61058c565b005b34801561021457600080fd5b5061021d610eca565b005b34801561022b57600080fd5b50610234611037565b6040516102419190612392565b60405180910390f35b34801561025657600080fd5b50610271600480360381019061026c9190611f85565b611060565b005b34801561027f57600080fd5b5061029a600480360381019061029591906120af565b6111ce565b6040516102a791906123cf565b60405180910390f35b3480156102bc57600080fd5b506102d760048036038101906102d291906120d8565b6111f2565b005b3480156102e557600080fd5b5061030060048036038101906102fb9190611fc1565b611531565b60405161030d91906123ad565b60405180910390f35b34801561032257600080fd5b5061033d600480360381019061033891906120af565b61166b565b005b34801561034b57600080fd5b50610366600480360381019061036191906120d8565b611881565b005b34801561037457600080fd5b5061038f600480360381019061038a9190611ef7565b611b18565b005b600560205282600052604060002060205281600052604060002081815481106103b957600080fd5b906000526020600020906005020160009250925050508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154905086565b6003602052816000526040600020602052806000526040600020600091509150505481565b60045481565b6104d234600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611d0a90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002081905550565b60026020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b6000600181111561059957fe5b8460018111156105a557fe5b1415610675576105be8183611d9290919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020541015610670576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066790612433565b60405180910390fd5b610728565b60018081111561068157fe5b84600181111561068d57fe5b14156107275781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020541015610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071d90612453565b60405180910390fd5b5b5b600060056000858152602001908152602001600020600086600181111561074b57fe5b81526020019081526020016000209050806040518060c0016040528060045481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561079757fe5b81526020018681526020018581526020018481525090806001815401808255809150506001900390600052602060002090600502016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600181111561084a57fe5b0217905550606082015181600201556080820151816003015560a08201518160040155505060008082805490501161088357600061088c565b60018280549050035b90506000600181111561089b57fe5b8660018111156108a757fe5b1415610ba1575b6000811115610b9c578181815481106108c357fe5b9060005260206000209060050201600401548260018303815481106108e457fe5b906000526020600020906005020160040154111561090157610b9c565b600082600183038154811061091257fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660018111156109a957fe5b60018111156109b457fe5b8152602001600282015481526020016003820154815260200160048201548152505090508282815481106109e457fe5b9060005260206000209060050201836001840381548110610a0157fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610ab157fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080838381548110610ae457fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610b6757fe5b0217905550606082015181600201556080820151816003015560a08201518160040155905050818060019003925050506108ae565b610eb0565b600180811115610bad57fe5b866001811115610bb957fe5b1415610eaf575b6000811115610eae57818181548110610bd557fe5b906000526020600020906005020160040154826001830381548110610bf657fe5b9060005260206000209060050201600401541015610c1357610eae565b6000826001830381548110610c2457fe5b90600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166001811115610cbb57fe5b6001811115610cc657fe5b815260200160028201548152602001600382015481526020016004820154815250509050828281548110610cf657fe5b9060005260206000209060050201836001840381548110610d1357fe5b9060005260206000209060050201600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001820160149054906101000a900460ff168160010160146101000a81548160ff02191690836001811115610dc357fe5b021790555060028201548160020155600382015481600301556004820154816004015590505080838381548110610df657fe5b90600052602060002090600502016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836001811115610e7957fe5b0217905550606082015181600201556080820151816003015560a0820151816004015590505081806001900392505050610bc0565b5b5b600460008154809291906001019190505550505050505050565b610ed2611e18565b73ffffffffffffffffffffffffffffffffffffffff16610ef0611037565b73ffffffffffffffffffffffffffffffffffffffff1614610f79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611068611e18565b73ffffffffffffffffffffffffffffffffffffffff16611086611037565b73ffffffffffffffffffffffffffffffffffffffff161461110f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60405180604001604052808381526020018273ffffffffffffffffffffffffffffffffffffffff16815250600260008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060018290806001815401808255809150506001900390600052602060002001600090919091909150555050565b600181815481106111de57600080fd5b906000526020600020016000915090505481565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020541015611392576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f42616c616e63657320696e73756666696369656e74210000000000000000000081525060200191505060405180910390fd5b6113f583600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611e2090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020819055506002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156114f057600080fd5b505af1158015611504573d6000803e3d6000fd5b505050506040513d602081101561151a57600080fd5b810190808051906020019092919050505050505050565b606060056000848152602001908152602001600020600083600181111561155457fe5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561165f57838290600052602060002090600502016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600181111561162357fe5b600181111561162e57fe5b8152602001600282015481526020016003820154815260200160048201548152505081526020019060010190611582565b50505050905092915050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054101561171e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171590612413565b60405180910390fd5b6117a181600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f4554480000000000000000000000000000000000000000000000000000000000815260200190815260200160002054611e2090919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060007f45544800000000000000000000000000000000000000000000000000000000008152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16816040516118399061237d565b60006040518083038185875af1925050503d8060008114611876576040519150601f19603f3d011682016040523d82523d6000602084013e61187b565b606091505b50505050565b80600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561195b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20646f6573206e6f7420657869737421000000000000000000000081525060200191505060405180910390fd5b6002600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611a2057600080fd5b505af1158015611a34573d6000803e3d6000fd5b505050506040513d6020811015611a4a57600080fd5b810190808051906020019092919050505050611abf83600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002054611d0a90919063ffffffff16565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002081905550505050565b611b20611e18565b73ffffffffffffffffffffffffffffffffffffffff16611b3e611037565b73ffffffffffffffffffffffffffffffffffffffff1614611bc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c4d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061261b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080828401905083811015611d88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611da55760009050611e12565b6000828402905082848281611db657fe5b0414611e0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806126416021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600082821115611e98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600081359050611eb2816125c5565b92915050565b600081359050611ec7816125dc565b92915050565b600081359050611edc816125f3565b92915050565b600081359050611ef181612603565b92915050565b600060208284031215611f0957600080fd5b6000611f1784828501611ea3565b91505092915050565b60008060408385031215611f3357600080fd5b6000611f4185828601611ea3565b9250506020611f5285828601611eb8565b9150509250929050565b600060208284031215611f6e57600080fd5b6000611f7c84828501611eb8565b91505092915050565b60008060408385031215611f9857600080fd5b6000611fa685828601611eb8565b9250506020611fb785828601611ea3565b9150509250929050565b60008060408385031215611fd457600080fd5b6000611fe285828601611eb8565b9250506020611ff385828601611ecd565b9150509250929050565b60008060006060848603121561201257600080fd5b600061202086828701611eb8565b935050602061203186828701611ee2565b925050604061204286828701611ee2565b9150509250925092565b6000806000806080858703121561206257600080fd5b600061207087828801611ecd565b945050602061208187828801611eb8565b935050604061209287828801611ee2565b92505060606120a387828801611ee2565b91505092959194509250565b6000602082840312156120c157600080fd5b60006120cf84828501611ee2565b91505092915050565b600080604083850312156120eb57600080fd5b60006120f985828601611ee2565b925050602061210a85828601611eb8565b9150509250929050565b600061212083836122e4565b60c08301905092915050565b61213581612544565b82525050565b61214481612544565b82525050565b6000612155826124ff565b61215f8185612517565b935061216a836124ef565b8060005b8381101561219b5781516121828882612114565b975061218d8361250a565b92505060018101905061216e565b5085935050505092915050565b6121b181612556565b82525050565b6121c081612556565b82525050565b6121cf8161259d565b82525050565b6121de8161259d565b82525050565b60006121f1601283612533565b91507f496e7375666669656e742062616c616e636500000000000000000000000000006000830152602082019050919050565b6000612231600083612528565b9150600082019050919050565b600061224b602883612533565b91507f496e73756666696369656e742066756e647320746f206372656174652074686960008301527f73206f72646572210000000000000000000000000000000000000000000000006020830152604082019050919050565b60006122b1601a83612533565b91507f496e73756666696369656e7420746f6b656e20616d6f756e74210000000000006000830152602082019050919050565b60c0820160008201516122fa600085018261235f565b50602082015161230d602085018261212c565b50604082015161232060408501826121c6565b50606082015161233360608501826121a8565b506080820151612346608085018261235f565b5060a082015161235960a085018261235f565b50505050565b61236881612593565b82525050565b61237781612593565b82525050565b600061238882612224565b9150819050919050565b60006020820190506123a7600083018461213b565b92915050565b600060208201905081810360008301526123c7818461214a565b905092915050565b60006020820190506123e460008301846121b7565b92915050565b60006040820190506123ff60008301856121b7565b61240c602083018461213b565b9392505050565b6000602082019050818103600083015261242c816121e4565b9050919050565b6000602082019050818103600083015261244c8161223e565b9050919050565b6000602082019050818103600083015261246c816122a4565b9050919050565b6000602082019050612488600083018461236e565b92915050565b600060c0820190506124a3600083018961236e565b6124b0602083018861213b565b6124bd60408301876121d5565b6124ca60608301866121b7565b6124d7608083018561236e565b6124e460a083018461236e565b979650505050505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061254f82612573565b9050919050565b6000819050919050565b600081905061256e826125b1565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006125a882612560565b9050919050565bfe5b600281106125c2576125c16125af565b5b50565b6125ce81612544565b81146125d957600080fd5b50565b6125e581612556565b81146125f057600080fd5b50565b6002811061260057600080fd5b50565b61260c81612593565b811461261757600080fd5b5056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220977c52b7d4281cfac0a700838972386058916d64c524e233dd79eb3aaba9ad4664736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15383:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:6"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:6",
                "type": ""
              }
            ],
            "src": "152:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "356:94:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "366:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "388:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "375:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "366:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "438:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "404:33:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "404:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "404:40:6"
                }
              ]
            },
            "name": "abi_decode_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "334:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "342:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "350:5:6",
                "type": ""
              }
            ],
            "src": "297:153:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "540:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "527:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "518:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "583:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "556:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "556:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "556:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "486:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "494:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "502:5:6",
                "type": ""
              }
            ],
            "src": "456:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "713:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "722:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "715:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "715:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "715:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "688:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "684:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "709:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "680:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "677:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "739:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "754:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "768:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "758:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "783:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "818:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "829:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "814:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "814:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "838:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "793:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "783:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "637:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "648:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "660:6:6",
                "type": ""
              }
            ],
            "src": "601:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "998:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1007:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1010:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1000:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1000:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "973:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "982:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "969:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "994:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "965:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "962:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1024:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1039:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1053:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1043:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1068:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1103:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1114:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1099:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1099:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1123:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1078:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1068:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1151:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1166:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1180:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1170:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1196:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1231:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1242:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1227:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1227:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1251:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1206:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1206:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1196:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "914:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "925:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "937:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "945:6:6",
                "type": ""
              }
            ],
            "src": "869:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1394:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1403:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1406:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1396:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1396:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1396:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1369:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1378:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1390:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1361:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1361:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1358:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1420:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1435:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1449:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1439:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1464:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1499:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1510:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1495:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1495:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1519:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1474:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1474:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1464:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1318:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1329:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1341:6:6",
                "type": ""
              }
            ],
            "src": "1282:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1633:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1679:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1691:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1681:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1681:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1681:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1654:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1663:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1675:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1646:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1646:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1643:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1705:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1720:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1734:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1724:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1749:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1784:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1795:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1780:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1780:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1804:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1759:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1749:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1832:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1847:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1851:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1877:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1912:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1923:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1908:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1908:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1932:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1887:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1877:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1595:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1606:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1618:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1626:6:6",
                "type": ""
              }
            ],
            "src": "1550:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2053:331:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2099:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2108:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2111:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2101:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2101:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2101:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2074:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2083:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2070:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2070:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2095:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2066:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2066:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2063:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2125:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2140:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2144:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2169:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2204:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2215:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2200:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2200:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2224:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2179:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2179:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2169:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2252:125:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2267:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2271:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2297:70:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2339:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2350:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2335:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2335:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2359:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$11",
                          "nodeType": "YulIdentifier",
                          "src": "2307:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2307:60:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2297:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2015:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2026:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2038:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2046:6:6",
                "type": ""
              }
            ],
            "src": "1963:421:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2490:452:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2536:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2545:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2548:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2538:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2511:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2520:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2507:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2507:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2503:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2503:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2500:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2562:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2577:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2591:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2581:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2606:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2641:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2652:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2637:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2637:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2661:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "2616:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2616:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2606:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2689:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2704:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2718:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2708:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2734:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2769:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2780:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2765:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2765:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2789:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2744:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2744:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2734:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2817:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2832:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2846:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2836:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2862:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2897:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2908:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2893:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2893:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2917:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2872:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2872:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2862:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2444:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2455:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2467:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2475:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2483:6:6",
                "type": ""
              }
            ],
            "src": "2390:552:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3072:588:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3119:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3128:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3131:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3121:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3121:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3121:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3093:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3102:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3089:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3089:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3114:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3085:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:33:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3082:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3145:124:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3160:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3174:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3164:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3189:70:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3231:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3242:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3227:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3227:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3251:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_enum$_Side_$11",
                          "nodeType": "YulIdentifier",
                          "src": "3199:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3199:60:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3189:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3279:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3294:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3308:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3298:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3324:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3359:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3370:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3355:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3355:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3379:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "3334:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3334:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3324:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3407:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3422:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3436:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3426:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3452:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3487:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3498:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3483:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3483:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3507:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3462:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3462:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3452:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3535:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3550:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3564:2:6",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3554:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3580:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3615:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3626:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3611:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3611:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3635:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3590:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3590:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3580:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_Side_$11t_bytes32t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3018:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3029:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3041:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3049:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3057:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3065:6:6",
                "type": ""
              }
            ],
            "src": "2948:712:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3732:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3778:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3787:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3790:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3780:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3780:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3780:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3753:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3762:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3749:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3774:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3745:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3745:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3742:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3804:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3819:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3833:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3823:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3848:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3883:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3894:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3879:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3879:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3903:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3858:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3848:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3702:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3713:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3725:6:6",
                "type": ""
              }
            ],
            "src": "3666:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:324:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4063:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4072:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4075:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4065:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4065:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4065:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4038:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4047:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4034:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4059:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4030:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4030:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "4027:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4089:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4104:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4118:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4108:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4133:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4168:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4179:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4164:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4164:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4188:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4143:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4143:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4133:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4216:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4231:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4245:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4235:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4261:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4296:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4307:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4292:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4292:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4316:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "4271:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4271:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4261:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3979:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3990:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4002:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4010:6:6",
                "type": ""
              }
            ],
            "src": "3934:407:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4469:141:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4555:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4563:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4479:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4479:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4479:88:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4576:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4594:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4599:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4590:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4590:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "4576:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4442:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4450:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "4458:10:6",
                "type": ""
              }
            ],
            "src": "4347:263:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4671:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4688:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4711:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4693:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4693:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4681:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4681:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4681:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4659:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4666:3:6",
                "type": ""
              }
            ],
            "src": "4616:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4795:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4812:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4835:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4817:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4817:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4805:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4783:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4790:3:6",
                "type": ""
              }
            ],
            "src": "4730:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5068:734:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5078:89:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5161:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5092:68:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5092:75:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5082:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5176:114:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5278:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5283:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5183:94:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5183:107:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5176:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5299:92:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5385:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5314:70:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5314:77:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5303:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5400:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5414:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5404:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5490:287:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5504:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5531:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5525:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5525:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5508:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5551:112:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5644:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5659:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5558:85:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5558:105:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5551:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5676:91:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5760:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5686:73:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5686:81:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5676:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5452:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5455:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5449:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5449:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5463:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5465:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5474:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5477:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5470:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5470:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5465:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5434:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5436:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5445:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5440:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5430:347:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5786:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5793:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5786:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5047:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5054:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5063:3:6",
                "type": ""
              }
            ],
            "src": "4902:900:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5880:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5903:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "5885:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5885:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:37:6"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5851:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5858:3:6",
                "type": ""
              }
            ],
            "src": "5808:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6004:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6027:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "6009:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6009:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5997:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5997:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5997:37:6"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5975:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5982:3:6",
                "type": ""
              }
            ],
            "src": "5922:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6106:71:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6123:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6164:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6128:35:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6128:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6116:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6116:55:6"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6094:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6101:3:6",
                "type": ""
              }
            ],
            "src": "6046:131:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6253:71:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6270:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6311:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "6275:35:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6263:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6263:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6263:55:6"
                }
              ]
            },
            "name": "abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6241:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6248:3:6",
                "type": ""
              }
            ],
            "src": "6183:141:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6476:170:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6486:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6552:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6557:2:6",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6493:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6493:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6486:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6581:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6586:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6577:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6577:11:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6590:20:6",
                        "type": "",
                        "value": "Insuffient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6570:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6570:41:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6570:41:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6621:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6632:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6637:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6628:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6628:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6621:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6464:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6472:3:6",
                "type": ""
              }
            ],
            "src": "6330:316:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6815:134:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6825:90:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6908:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6913:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6832:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6832:83:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6825:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6925:18:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6936:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6941:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6932:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6932:11:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6925:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6803:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6811:3:6",
                "type": ""
              }
            ],
            "src": "6652:297:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7101:226:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7111:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7177:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7182:2:6",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7118:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7111:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7206:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7211:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7202:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7202:11:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7215:34:6",
                        "type": "",
                        "value": "Insufficient funds to create thi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7195:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7195:55:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7195:55:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7271:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7276:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7267:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7267:12:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7281:10:6",
                        "type": "",
                        "value": "s order!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7260:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7260:32:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7302:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7313:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7318:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7309:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7309:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7302:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7089:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7097:3:6",
                "type": ""
              }
            ],
            "src": "6955:372:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7479:178:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7489:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7555:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7560:2:6",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7496:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7496:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7489:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "7584:3:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7589:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7580:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7580:11:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7593:28:6",
                        "type": "",
                        "value": "Insufficient token amount!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7573:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7573:49:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7573:49:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7632:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7643:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7648:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7639:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7639:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7632:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7467:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7475:3:6",
                "type": ""
              }
            ],
            "src": "7333:324:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7805:1097:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7815:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7831:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7836:4:6",
                        "type": "",
                        "value": "0xc0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7827:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7827:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "7819:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7851:162:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7884:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7914:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7921:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7910:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7910:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "7904:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7904:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "7888:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "7974:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7992:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7997:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7988:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7988:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7940:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7940:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7940:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8023:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8060:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8090:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8097:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8086:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8086:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8080:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8080:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8064:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8150:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8168:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8173:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8164:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8164:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8116:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8116:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8116:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8199:169:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8234:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8264:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8271:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8260:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8260:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8254:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8254:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8238:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8329:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8347:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8352:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8343:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8343:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_enum$_Side_$11_to_t_uint8",
                          "nodeType": "YulIdentifier",
                          "src": "8290:38:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8290:68:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8290:68:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8378:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8415:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8445:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8452:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8441:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8441:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8435:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8435:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8419:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8505:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8523:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8528:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8519:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8519:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bytes32_to_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "8471:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8471:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8471:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8554:166:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8591:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8621:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8628:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8617:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8617:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8611:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8611:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8595:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8681:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8699:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8704:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8695:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8695:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8647:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8647:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8647:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8730:165:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8766:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8796:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8803:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8792:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8792:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8786:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8770:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8856:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8874:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8879:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8870:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8870:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8822:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8822:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8822:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7792:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7799:3:6",
                "type": ""
              }
            ],
            "src": "7707:1195:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8963:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8980:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9003:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "8985:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8985:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8973:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8973:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8973:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8951:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8958:3:6",
                "type": ""
              }
            ],
            "src": "8908:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9087:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9104:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9127:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "9109:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9109:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9097:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9097:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9097:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9075:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9082:3:6",
                "type": ""
              }
            ],
            "src": "9022:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9334:191:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9345:154:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9495:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9352:141:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9352:147:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9345:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9509:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "9516:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9509:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9321:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9330:3:6",
                "type": ""
              }
            ],
            "src": "9146:379:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9629:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9639:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9651:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9662:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9647:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9647:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9639:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9719:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9732:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9743:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9728:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9728:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9675:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9675:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9675:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9601:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9613:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9624:4:6",
                "type": ""
              }
            ],
            "src": "9531:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9949:267:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9959:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9971:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9982:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9967:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9967:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9959:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10006:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10017:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10002:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10002:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10025:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10031:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10021:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10021:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9995:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9995:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9995:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10051:158:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10195:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10204:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10059:135:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10059:150:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10051:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9921:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9933:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9944:4:6",
                "type": ""
              }
            ],
            "src": "9759:457:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10320:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10330:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10342:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10353:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10338:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10338:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10330:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10410:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10423:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10434:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10419:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10419:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10366:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10366:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10366:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10292:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10304:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10315:4:6",
                "type": ""
              }
            ],
            "src": "10222:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10576:206:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10586:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10598:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10609:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10594:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10594:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10586:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10666:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10679:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10690:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10675:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10675:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10622:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10622:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10622:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10747:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10760:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10771:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10756:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10756:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10703:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10703:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10703:72:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10540:9:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10552:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10560:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10571:4:6",
                "type": ""
              }
            ],
            "src": "10450:332:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10959:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10969:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10981:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10992:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10977:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10977:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10969:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11016:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11027:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11012:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11012:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11035:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11041:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11031:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11031:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11005:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11005:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11005:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11061:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11195:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11069:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11069:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11061:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10939:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10954:4:6",
                "type": ""
              }
            ],
            "src": "10788:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11384:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11394:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11406:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11417:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11402:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11402:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11394:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11441:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11452:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11437:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11437:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11460:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11466:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11456:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11456:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11430:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11430:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11430:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11486:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11620:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11494:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11494:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11486:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11364:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11379:4:6",
                "type": ""
              }
            ],
            "src": "11213:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11809:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11819:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11831:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11842:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11827:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11827:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11819:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11866:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11877:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11862:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11862:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11885:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11891:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11881:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11881:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11855:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11855:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11855:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11911:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12045:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11919:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11919:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11911:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11789:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11804:4:6",
                "type": ""
              }
            ],
            "src": "11638:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12161:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12171:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12183:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12194:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12179:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12179:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12171:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12251:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12264:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12275:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12260:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12260:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12207:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12207:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12207:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12133:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12145:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12156:4:6",
                "type": ""
              }
            ],
            "src": "12063:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12534:542:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12544:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12556:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12567:3:6",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12552:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12552:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12544:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12625:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12638:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12649:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12634:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12634:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12581:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12581:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12581:71:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "12706:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12719:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12730:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12715:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12715:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12662:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12662:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12662:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12793:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12806:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12817:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12802:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12802:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12744:48:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12744:77:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12744:77:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "12875:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12888:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12899:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12884:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12884:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12831:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12831:72:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12831:72:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "12957:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12970:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12981:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12966:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12966:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12913:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12913:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12913:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "13040:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13053:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13064:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13049:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13049:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12996:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12996:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12996:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$11_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12466:9:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "12478:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "12486:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12494:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12502:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12510:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12518:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12529:4:6",
                "type": ""
              }
            ],
            "src": "12291:785:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13175:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13185:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "13193:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "13185:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13206:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "13218:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13223:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13214:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13214:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "13206:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "13162:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "13170:4:6",
                "type": ""
              }
            ],
            "src": "13082:153:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13336:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13347:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13363:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13357:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13357:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "13347:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13319:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13329:6:6",
                "type": ""
              }
            ],
            "src": "13241:135:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13478:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13488:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "13500:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13505:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13496:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13496:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "13488:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "13465:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "13473:4:6",
                "type": ""
              }
            ],
            "src": "13382:134:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13654:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13671:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13676:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13664:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13664:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13664:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13692:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13711:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13716:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13707:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13707:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13692:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13626:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13631:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13642:11:6",
                "type": ""
              }
            ],
            "src": "13522:205:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13846:34:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13856:18:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13871:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "13856:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13818:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13823:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13834:11:6",
                "type": ""
              }
            ],
            "src": "13733:147:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13982:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13999:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "14004:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13992:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13992:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13992:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14020:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14039:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14044:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14035:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14035:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "14020:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13954:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "13959:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "13970:11:6",
                "type": ""
              }
            ],
            "src": "13886:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14106:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14116:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14145:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "14127:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14127:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14116:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14088:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14098:7:6",
                "type": ""
              }
            ],
            "src": "14061:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14208:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14218:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14229:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14218:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14190:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14200:7:6",
                "type": ""
              }
            ],
            "src": "14163:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14298:73:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14308:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14319:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14308:7:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14359:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_assert_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "14325:33:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14325:40:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14325:40:6"
                }
              ]
            },
            "name": "cleanup_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14280:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14290:7:6",
                "type": ""
              }
            ],
            "src": "14246:125:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14422:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14432:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14447:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14454:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14443:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14443:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14432:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14404:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14414:7:6",
                "type": ""
              }
            ],
            "src": "14377:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14554:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14564:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "14575:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "14564:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14536:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "14546:7:6",
                "type": ""
              }
            ],
            "src": "14509:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14657:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14667:44:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14705:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_enum$_Side_$11",
                      "nodeType": "YulIdentifier",
                      "src": "14680:24:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14680:31:6"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "14667:9:6"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_enum$_Side_$11_to_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14637:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "14647:9:6",
                "type": ""
              }
            ],
            "src": "14592:125:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14746:25:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "functionName": {
                      "name": "invalid",
                      "nodeType": "YulIdentifier",
                      "src": "14756:7:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14756:9:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14756:9:6"
                }
              ]
            },
            "name": "panic_error",
            "nodeType": "YulFunctionDefinition",
            "src": "14723:48:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14827:57:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14861:17:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error",
                            "nodeType": "YulIdentifier",
                            "src": "14863:11:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14863:13:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14863:13:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14850:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14857:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14847:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14847:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14840:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14840:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "14837:2:6"
                }
              ]
            },
            "name": "validator_assert_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14820:5:6",
                "type": ""
              }
            ],
            "src": "14777:107:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14933:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14990:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14999:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15002:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14992:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14992:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14992:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14956:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14981:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "14963:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14963:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14953:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14953:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14946:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14946:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "14943:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14926:5:6",
                "type": ""
              }
            ],
            "src": "14890:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15061:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15118:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15127:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15130:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15120:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15120:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15120:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15084:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15109:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "15091:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15091:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15081:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15081:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15074:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15074:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "15071:2:6"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15054:5:6",
                "type": ""
              }
            ],
            "src": "15018:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15196:56:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15230:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15239:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15242:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15232:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15232:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15232:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15219:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15226:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15216:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15216:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15209:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15209:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "15206:2:6"
                }
              ]
            },
            "name": "validator_revert_t_enum$_Side_$11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15189:5:6",
                "type": ""
              }
            ],
            "src": "15146:106:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15301:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15358:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15367:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15370:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15360:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15360:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15360:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15324:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15349:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "15331:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15331:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15321:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15321:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15314:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15314:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "15311:2:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15294:5:6",
                "type": ""
              }
            ],
            "src": "15258:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_enum$_Side_$11(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_enum$_Side_$11(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_enum$_Side_$11(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_enum$_Side_$11(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_enum$_Side_$11t_bytes32t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_enum$_Side_$11(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Dex.Order[] -> struct Dex.Order[]\n    function abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_enum$_Side_$11_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Side_$11_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"Insuffient balance\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"Insufficient funds to create thi\")\n\n        mstore(add(pos, 32), \"s order!\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n\n        mstore(add(pos, 0), \"Insufficient token amount!\")\n\n        end := add(pos, 32)\n    }\n\n    // struct Dex.Order -> struct Dex.Order\n    function abi_encode_t_struct$_Order_$24_memory_ptr_to_t_struct$_Order_$24_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // trader\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // side\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_enum$_Side_$11_to_t_uint8(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // ticker\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address__to_t_bytes32_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_enum$_Side_$11_t_bytes32_t_uint256_t_uint256__to_t_uint256_t_address_t_uint8_t_bytes32_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_enum$_Side_$11_to_t_uint8_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_enum$_Side_$11(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Side_$11(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_enum$_Side_$11_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Side_$11(value)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_assert_t_enum$_Side_$11(value) {\n        if iszero(lt(value, 2)) { panic_error() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_enum$_Side_$11(value) {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "96:2917:0:-:0;;;364:1;338:27;;96:2917;;;;;;;;;;884:17:2;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;96:2917:0;;598:104:5;651:15;685:10;678:17;;598:104;:::o;96:2917:0:-;;;;;;;",
  "deployedSourceMap": "96:2917:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;372:63;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1020:64:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;338:27:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2577:146;;;:::i;:::-;;672:46:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;585:1974:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1717:145:2;;;;;;;;;;;;;:::i;:::-;;1085:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1091:447:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;604:26;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1979:321;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;442:135:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2730:276;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1544:429:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2011:240:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;372:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1020:64:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;338:27:0:-;;;;:::o;2577:146::-;2665:51;2706:9;2665:8;:20;2674:10;2665:20;;;;;;;;;;;;;;;:36;2686:14;2665:36;;;;;;;;;;;;:40;;:51;;;;:::i;:::-;2626:8;:20;2635:10;2626:20;;;;;;;;;;;;;;;:36;2647:14;2626:36;;;;;;;;;;;:90;;;;2577:146::o;672:46:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;585:1974:0:-;692:8;684:16;;;;;;;;:4;:16;;;;;;;;;681:290;;;759:17;770:5;759:6;:10;;:17;;;;:::i;:::-;728:8;:20;737:10;728:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;:48;;720:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;681:290;;;855:9;847:17;;;;;;;;:4;:17;;;;;;;;;844:127;;;924:6;892:8;:20;901:10;892:20;;;;;;;;;;;;;;;:28;913:6;892:28;;;;;;;;;;;;:38;;884:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;844:127;681:290;1085:22;1110:9;:17;1120:6;1110:17;;;;;;;;;;;:29;1133:4;1128:10;;;;;;;;1110:29;;;;;;;;;;;1085:54;;1365:6;1387:59;;;;;;;;1393:11;;1387:59;;;;1406:10;1387:59;;;;;;1418:4;1387:59;;;;;;;;;;;;1424:6;1387:59;;;;1432:6;1387:59;;;;1440:5;1387:59;;;1365:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:6;1591:1;1575:6;:13;;;;:17;:41;;1615:1;1575:41;;;1611:1;1595:6;:13;;;;:17;1575:41;1566:50;;1765:8;1757:16;;;;;;;;:4;:16;;;;;;;;;1754:776;;;1785:283;1796:1;1792;:5;1785:283;;;1840:6;1847:1;1840:9;;;;;;;;;;;;;;;;;;:15;;;1818:6;1829:1;1825;:5;1818:13;;;;;;;;;;;;;;;;;;:19;;;:37;1815:83;;;1875:5;;1815:83;1914:22;1939:6;1950:1;1946;:5;1939:13;;;;;;;;;;;;;;;;;;1914:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:6;1992:1;1985:9;;;;;;;;;;;;;;;;;;1969:6;1980:1;1976;:5;1969:13;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:9;2011:6;2018:1;2011:9;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2049:3;;;;;;;;1785:283;;;;1754:776;;;2208:9;2200:17;;;;;;;;:4;:17;;;;;;;;;2197:333;;;2233:284;2244:1;2240;:5;2233:284;;;2289:6;2296:1;2289:9;;;;;;;;;;;;;;;;;;:15;;;2267:6;2278:1;2274;:5;2267:13;;;;;;;;;;;;;;;;;;:19;;;:37;2263:84;;;2324:5;;2263:84;2363:22;2388:6;2399:1;2395;:5;2388:13;;;;;;;;;;;;;;;;;;2363:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2434:6;2441:1;2434:9;;;;;;;;;;;;;;;;;;2418:6;2429:1;2425;:5;2418:13;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:9;2460:6;2467:1;2460:9;;;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2498:3;;;;;;;;2233:284;;;;2197:333;1754:776;2542:11;;:13;;;;;;;;;;;;;585:1974;;;;;;:::o;1717:145:2:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;1085:85::-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;1091:447:1:-;1308:12:2;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:27:1::1;;;;;;;;1271:6;1265:27;;;;1279:12;1265:27;;;;::::0;1242:12:::1;:20;1255:6;1242:20;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:9;1456:6;1441:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1091:447:::0;;:::o;604:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1979:321::-;2037:6;485:1;440:47;;:12;:20;453:6;440:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;432:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2102:6:::1;2070:8;:20;2079:10;2070:20;;;;;;;;;;;;;;;:28;2091:6;2070:28;;;;;;;;;;;;:38;;2062:73;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;2177:40;2210:6;2177:8;:20;2186:10;2177:20;;;;;;;;;;;;;;;:28;2198:6;2177:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;2146:8;:20;2155:10;2146:20;;;;;;;;;;;;;;;:28;2167:6;2146:28;;;;;;;;;;;:71;;;;2231:12;:20;2244:6;2231:20;;;;;;;;;;;:33;;;;;;;;;;;;2224:50;;;2275:10;2287:6;2224:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1979:321:::0;;;:::o;442:135:0:-;511:14;542:9;:17;552:6;542:17;;;;;;;;;;;:29;565:4;560:10;;;;;;;;542:29;;;;;;;;;;;535:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:135;;;;:::o;2730:276::-;2831:6;2791:8;:20;2800:10;2791:20;;;;;;;;;;;;;;;:36;2812:14;2791:36;;;;;;;;;;;;:46;;2783:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2908:48;2949:6;2908:8;:20;2917:10;2908:20;;;;;;;;;;;;;;;:36;2929:14;2908:36;;;;;;;;;;;;:40;;:48;;;;:::i;:::-;2869:8;:20;2878:10;2869:20;;;;;;;;;;;;;;;:36;2890:14;2869:36;;;;;;;;;;;:87;;;;2966:10;:15;;2988:6;2966:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:276;:::o;1544:429:1:-;1601:6;485:1;440:47;;:12;:20;453:6;440:20;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;432:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1636:12:::1;:20;1649:6;1636:20;;;;;;;;;;;:33;;;;;;;;;;;;1629:54;;;1684:10;1704:4;1711:6;1629:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;1870:40;1903:6;1870:8;:20;1879:10;1870:20;;;;;;;;;;;;;;;:28;1891:6;1870:28;;;;;;;;;;;;:32;;:40;;;;:::i;:::-;1839:8;:20;1848:10;1839:20;;;;;;;;;;;;;;;:28;1860:6;1839:28;;;;;;;;;;;:71;;;;1544:429:::0;;;:::o;2011:240:2:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;2690:175:3:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;598:104:5:-;651:15;685:10;678:17;;598:104;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:153::-;;388:6;375:20;366:29;;404:40;438:5;404:40;:::i;:::-;356:94;;;;:::o;456:139::-;;540:6;527:20;518:29;;556:33;583:5;556:33;:::i;:::-;508:87;;;;:::o;601:262::-;;709:2;697:9;688:7;684:23;680:32;677:2;;;725:1;722;715:12;677:2;768:1;793:53;838:7;829:6;818:9;814:22;793:53;:::i;:::-;783:63;;739:117;667:196;;;;:::o;869:407::-;;;994:2;982:9;973:7;969:23;965:32;962:2;;;1010:1;1007;1000:12;962:2;1053:1;1078:53;1123:7;1114:6;1103:9;1099:22;1078:53;:::i;:::-;1068:63;;1024:117;1180:2;1206:53;1251:7;1242:6;1231:9;1227:22;1206:53;:::i;:::-;1196:63;;1151:118;952:324;;;;;:::o;1282:262::-;;1390:2;1378:9;1369:7;1365:23;1361:32;1358:2;;;1406:1;1403;1396:12;1358:2;1449:1;1474:53;1519:7;1510:6;1499:9;1495:22;1474:53;:::i;:::-;1464:63;;1420:117;1348:196;;;;:::o;1550:407::-;;;1675:2;1663:9;1654:7;1650:23;1646:32;1643:2;;;1691:1;1688;1681:12;1643:2;1734:1;1759:53;1804:7;1795:6;1784:9;1780:22;1759:53;:::i;:::-;1749:63;;1705:117;1861:2;1887:53;1932:7;1923:6;1912:9;1908:22;1887:53;:::i;:::-;1877:63;;1832:118;1633:324;;;;;:::o;1963:421::-;;;2095:2;2083:9;2074:7;2070:23;2066:32;2063:2;;;2111:1;2108;2101:12;2063:2;2154:1;2179:53;2224:7;2215:6;2204:9;2200:22;2179:53;:::i;:::-;2169:63;;2125:117;2281:2;2307:60;2359:7;2350:6;2339:9;2335:22;2307:60;:::i;:::-;2297:70;;2252:125;2053:331;;;;;:::o;2390:552::-;;;;2532:2;2520:9;2511:7;2507:23;2503:32;2500:2;;;2548:1;2545;2538:12;2500:2;2591:1;2616:53;2661:7;2652:6;2641:9;2637:22;2616:53;:::i;:::-;2606:63;;2562:117;2718:2;2744:53;2789:7;2780:6;2769:9;2765:22;2744:53;:::i;:::-;2734:63;;2689:118;2846:2;2872:53;2917:7;2908:6;2897:9;2893:22;2872:53;:::i;:::-;2862:63;;2817:118;2490:452;;;;;:::o;2948:712::-;;;;;3114:3;3102:9;3093:7;3089:23;3085:33;3082:2;;;3131:1;3128;3121:12;3082:2;3174:1;3199:60;3251:7;3242:6;3231:9;3227:22;3199:60;:::i;:::-;3189:70;;3145:124;3308:2;3334:53;3379:7;3370:6;3359:9;3355:22;3334:53;:::i;:::-;3324:63;;3279:118;3436:2;3462:53;3507:7;3498:6;3487:9;3483:22;3462:53;:::i;:::-;3452:63;;3407:118;3564:2;3590:53;3635:7;3626:6;3615:9;3611:22;3590:53;:::i;:::-;3580:63;;3535:118;3072:588;;;;;;;:::o;3666:262::-;;3774:2;3762:9;3753:7;3749:23;3745:32;3742:2;;;3790:1;3787;3780:12;3742:2;3833:1;3858:53;3903:7;3894:6;3883:9;3879:22;3858:53;:::i;:::-;3848:63;;3804:117;3732:196;;;;:::o;3934:407::-;;;4059:2;4047:9;4038:7;4034:23;4030:32;4027:2;;;4075:1;4072;4065:12;4027:2;4118:1;4143:53;4188:7;4179:6;4168:9;4164:22;4143:53;:::i;:::-;4133:63;;4089:117;4245:2;4271:53;4316:7;4307:6;4296:9;4292:22;4271:53;:::i;:::-;4261:63;;4216:118;4017:324;;;;;:::o;4347:263::-;;4479:88;4563:3;4555:6;4479:88;:::i;:::-;4599:4;4594:3;4590:14;4576:28;;4469:141;;;;:::o;4616:108::-;4693:24;4711:5;4693:24;:::i;:::-;4688:3;4681:37;4671:53;;:::o;4730:118::-;4817:24;4835:5;4817:24;:::i;:::-;4812:3;4805:37;4795:53;;:::o;4902:900::-;;5092:75;5161:5;5092:75;:::i;:::-;5183:107;5283:6;5278:3;5183:107;:::i;:::-;5176:114;;5314:77;5385:5;5314:77;:::i;:::-;5414:7;5445:1;5430:347;5455:6;5452:1;5449:13;5430:347;;;5531:6;5525:13;5558:105;5659:3;5644:13;5558:105;:::i;:::-;5551:112;;5686:81;5760:6;5686:81;:::i;:::-;5676:91;;5490:287;5477:1;5474;5470:9;5465:14;;5430:347;;;5434:14;5793:3;5786:10;;5068:734;;;;;;;:::o;5808:108::-;5885:24;5903:5;5885:24;:::i;:::-;5880:3;5873:37;5863:53;;:::o;5922:118::-;6009:24;6027:5;6009:24;:::i;:::-;6004:3;5997:37;5987:53;;:::o;6046:131::-;6128:42;6164:5;6128:42;:::i;:::-;6123:3;6116:55;6106:71;;:::o;6183:141::-;6275:42;6311:5;6275:42;:::i;:::-;6270:3;6263:55;6253:71;;:::o;6330:316::-;;6493:67;6557:2;6552:3;6493:67;:::i;:::-;6486:74;;6590:20;6586:1;6581:3;6577:11;6570:41;6637:2;6632:3;6628:12;6621:19;;6476:170;;;:::o;6652:297::-;;6832:83;6913:1;6908:3;6832:83;:::i;:::-;6825:90;;6941:1;6936:3;6932:11;6925:18;;6815:134;;;:::o;6955:372::-;;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7215:34;7211:1;7206:3;7202:11;7195:55;7281:10;7276:2;7271:3;7267:12;7260:32;7318:2;7313:3;7309:12;7302:19;;7101:226;;;:::o;7333:324::-;;7496:67;7560:2;7555:3;7496:67;:::i;:::-;7489:74;;7593:28;7589:1;7584:3;7580:11;7573:49;7648:2;7643:3;7639:12;7632:19;;7479:178;;;:::o;7707:1195::-;7836:4;7831:3;7827:14;7921:4;7914:5;7910:16;7904:23;7940:63;7997:4;7992:3;7988:14;7974:12;7940:63;:::i;:::-;7851:162;8097:4;8090:5;8086:16;8080:23;8116:63;8173:4;8168:3;8164:14;8150:12;8116:63;:::i;:::-;8023:166;8271:4;8264:5;8260:16;8254:23;8290:68;8352:4;8347:3;8343:14;8329:12;8290:68;:::i;:::-;8199:169;8452:4;8445:5;8441:16;8435:23;8471:63;8528:4;8523:3;8519:14;8505:12;8471:63;:::i;:::-;8378:166;8628:4;8621:5;8617:16;8611:23;8647:63;8704:4;8699:3;8695:14;8681:12;8647:63;:::i;:::-;8554:166;8803:4;8796:5;8792:16;8786:23;8822:63;8879:4;8874:3;8870:14;8856:12;8822:63;:::i;:::-;8730:165;7805:1097;;;:::o;8908:108::-;8985:24;9003:5;8985:24;:::i;:::-;8980:3;8973:37;8963:53;;:::o;9022:118::-;9109:24;9127:5;9109:24;:::i;:::-;9104:3;9097:37;9087:53;;:::o;9146:379::-;;9352:147;9495:3;9352:147;:::i;:::-;9345:154;;9516:3;9509:10;;9334:191;;;:::o;9531:222::-;;9662:2;9651:9;9647:18;9639:26;;9675:71;9743:1;9732:9;9728:17;9719:6;9675:71;:::i;:::-;9629:124;;;;:::o;9759:457::-;;9982:2;9971:9;9967:18;9959:26;;10031:9;10025:4;10021:20;10017:1;10006:9;10002:17;9995:47;10059:150;10204:4;10195:6;10059:150;:::i;:::-;10051:158;;9949:267;;;;:::o;10222:222::-;;10353:2;10342:9;10338:18;10330:26;;10366:71;10434:1;10423:9;10419:17;10410:6;10366:71;:::i;:::-;10320:124;;;;:::o;10450:332::-;;10609:2;10598:9;10594:18;10586:26;;10622:71;10690:1;10679:9;10675:17;10666:6;10622:71;:::i;:::-;10703:72;10771:2;10760:9;10756:18;10747:6;10703:72;:::i;:::-;10576:206;;;;;:::o;10788:419::-;;10992:2;10981:9;10977:18;10969:26;;11041:9;11035:4;11031:20;11027:1;11016:9;11012:17;11005:47;11069:131;11195:4;11069:131;:::i;:::-;11061:139;;10959:248;;;:::o;11213:419::-;;11417:2;11406:9;11402:18;11394:26;;11466:9;11460:4;11456:20;11452:1;11441:9;11437:17;11430:47;11494:131;11620:4;11494:131;:::i;:::-;11486:139;;11384:248;;;:::o;11638:419::-;;11842:2;11831:9;11827:18;11819:26;;11891:9;11885:4;11881:20;11877:1;11866:9;11862:17;11855:47;11919:131;12045:4;11919:131;:::i;:::-;11911:139;;11809:248;;;:::o;12063:222::-;;12194:2;12183:9;12179:18;12171:26;;12207:71;12275:1;12264:9;12260:17;12251:6;12207:71;:::i;:::-;12161:124;;;;:::o;12291:785::-;;12567:3;12556:9;12552:19;12544:27;;12581:71;12649:1;12638:9;12634:17;12625:6;12581:71;:::i;:::-;12662:72;12730:2;12719:9;12715:18;12706:6;12662:72;:::i;:::-;12744:77;12817:2;12806:9;12802:18;12793:6;12744:77;:::i;:::-;12831:72;12899:2;12888:9;12884:18;12875:6;12831:72;:::i;:::-;12913:73;12981:3;12970:9;12966:19;12957:6;12913:73;:::i;:::-;12996;13064:3;13053:9;13049:19;13040:6;12996:73;:::i;:::-;12534:542;;;;;;;;;:::o;13082:153::-;;13193:3;13185:11;;13223:4;13218:3;13214:14;13206:22;;13175:60;;;:::o;13241:135::-;;13363:5;13357:12;13347:22;;13336:40;;;:::o;13382:134::-;;13505:4;13500:3;13496:14;13488:22;;13478:38;;;:::o;13522:205::-;;13676:6;13671:3;13664:19;13716:4;13711:3;13707:14;13692:29;;13654:73;;;;:::o;13733:147::-;;13871:3;13856:18;;13846:34;;;;:::o;13886:169::-;;14004:6;13999:3;13992:19;14044:4;14039:3;14035:14;14020:29;;13982:73;;;;:::o;14061:96::-;;14127:24;14145:5;14127:24;:::i;:::-;14116:35;;14106:51;;;:::o;14163:77::-;;14229:5;14218:16;;14208:32;;;:::o;14246:125::-;;14319:5;14308:16;;14325:40;14359:5;14325:40;:::i;:::-;14298:73;;;:::o;14377:126::-;;14454:42;14447:5;14443:54;14432:65;;14422:81;;;:::o;14509:77::-;;14575:5;14564:16;;14554:32;;;:::o;14592:125::-;;14680:31;14705:5;14680:31;:::i;:::-;14667:44;;14657:60;;;:::o;14723:48::-;14756:9;14777:107;14857:1;14850:5;14847:12;14837:2;;14863:13;;:::i;:::-;14837:2;14827:57;:::o;14890:122::-;14963:24;14981:5;14963:24;:::i;:::-;14956:5;14953:35;14943:2;;15002:1;14999;14992:12;14943:2;14933:79;:::o;15018:122::-;15091:24;15109:5;15091:24;:::i;:::-;15084:5;15081:35;15071:2;;15130:1;15127;15120:12;15071:2;15061:79;:::o;15146:106::-;15226:1;15219:5;15216:12;15206:2;;15242:1;15239;15232:12;15206:2;15196:56;:::o;15258:122::-;15331:24;15349:5;15331:24;:::i;:::-;15324:5;15321:35;15311:2;;15370:1;15367;15360:12;15311:2;15301:79;:::o",
  "source": "pragma solidity >=0.6.0 <0.8.0;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./Wallet.sol\";\r\n\r\ncontract Dex is Wallet{\r\n\r\n  using SafeMath for uint256;\r\n\r\n    enum Side{\r\n      BUY,\r\n      SELL\r\n    }\r\n\r\n  struct Order{\r\n    uint id;\r\n    address trader;\r\n    Side side;\r\n    bytes32 ticker;\r\n    uint amount;\r\n    uint price;\r\n  }\r\n\r\n  uint public nextOrderId = 0;\r\n\r\n  mapping (bytes32 => mapping (uint => Order[])) public orderBook;\r\n\r\n  function getOrderBook(bytes32 ticker, Side side) view public returns(Order[] memory){\r\n      return orderBook[ticker][uint(side)];\r\n  }\r\n\r\n\r\n  function createLimitOrder(Side side, bytes32 ticker, uint amount, uint price) public {\r\n\r\n      if(side == Side.BUY)\r\n      {\r\n        require(balances[msg.sender][\"ETH\"] >= amount.mul(price), \"Insufficient funds to create this order!\");\r\n      }\r\n      else if(side == Side.SELL)\r\n      {\r\n        require(balances[msg.sender][ticker] >= amount, \"Insufficient token amount!\");\r\n      }\r\n\r\n      //To store orders, will have [Order1, Order2, ...] each order will be either a buy or sell order\r\n      Order[] storage orders = orderBook[ticker][uint(side)];  //side is an enum and has to be converted to uint before using in a reference for a mapping!!\r\n      //pushing the new order into the orders array, that is pointing to orderBook!!! strange, complicated but efficient\r\n      orders.push(\r\n        Order(nextOrderId, msg.sender, side, ticker, amount, price)\r\n      );\r\n\r\n      //Bubble sort for BUY orderBook, GOAL: have highest price at index 0, then price declining\r\n\r\n      uint i = orders.length > 0 ? orders.length - 1 : 0;  //If orders.length is bigger 0 then i = oders.length - 1, else i = 0;  Shorted if statement!! Crazy stuff, haha, so cryptic!!\r\n\r\n      if(side == Side.BUY){\r\n        while (i > 0){\r\n              if(orders[i - 1].price > orders[i].price){\r\n                break;\r\n              }\r\n              Order memory swapOrder = orders[i - 1];\r\n              orders[i - 1] = orders[i];\r\n              orders[i] = swapOrder;\r\n              i--;\r\n            }\r\n          }\r\n\r\n          //Bubble Sort for SELL orderBook, GOAL: lowest price at index 9 then price increasing\r\n          else if(side == Side.SELL){\r\n            while (i > 0){\r\n              if (orders[i - 1].price < orders[i].price){\r\n                break;\r\n              }\r\n              Order memory swapOrder = orders[i - 1];\r\n              orders[i - 1] = orders[i];\r\n              orders[i] = swapOrder;\r\n              i--;\r\n            }\r\n          }\r\n          nextOrderId++;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function depositEth() payable external {\r\n       balances[msg.sender][bytes32(\"ETH\")] = balances[msg.sender][bytes32(\"ETH\")].add(msg.value);\r\n   }\r\n\r\n   function withdrawEth(uint amount) external {\r\n       require(balances[msg.sender][bytes32(\"ETH\")] >= amount,'Insuffient balance');\r\n       balances[msg.sender][bytes32(\"ETH\")] = balances[msg.sender][bytes32(\"ETH\")].sub(amount);\r\n       msg.sender.call{value:amount}(\"\");\r\n   }\r\n\r\n\r\n}\r\n",
  "sourcePath": "C:/Users/sound/Desktop/EthProjects/DEX/contracts/Dex.sol",
  "ast": {
    "absolutePath": "/C/Users/sound/Desktop/EthProjects/DEX/contracts/Dex.sol",
    "exportedSymbols": {
      "Context": [
        1070
      ],
      "Dex": [
        335
      ],
      "IERC20": [
        1047
      ],
      "Ownable": [
        614
      ],
      "SafeMath": [
        969
      ],
      "Wallet": [
        504
      ]
    },
    "id": 336,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "absolutePath": "/C/Users/sound/Desktop/EthProjects/DEX/contracts/Wallet.sol",
        "file": "./Wallet.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 336,
        "sourceUnit": 505,
        "src": "70:22:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Wallet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 504,
              "src": "112:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Wallet_$504",
                "typeString": "contract Wallet"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "112:6:0"
          }
        ],
        "contractDependencies": [
          504,
          614,
          1070
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 335,
        "linearizedBaseContracts": [
          335,
          504,
          614,
          1070
        ],
        "name": "Dex",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 6,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 969,
              "src": "131:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$969",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "125:27:0",
            "typeName": {
              "id": 7,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "144:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Dex.Side",
            "id": 11,
            "members": [
              {
                "id": 9,
                "name": "BUY",
                "nodeType": "EnumValue",
                "src": "178:3:0"
              },
              {
                "id": 10,
                "name": "SELL",
                "nodeType": "EnumValue",
                "src": "190:4:0"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "160:41:0"
          },
          {
            "canonicalName": "Dex.Order",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "226:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "trader",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "240:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "240:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "side",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "261:9:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$11",
                  "typeString": "enum Dex.Side"
                },
                "typeName": {
                  "id": 16,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 11,
                  "src": "261:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "ticker",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "277:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 18,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "277:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "298:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 20,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "298:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "316:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "316:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Order",
            "nodeType": "StructDefinition",
            "scope": 335,
            "src": "207:125:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2a58b330",
            "id": 27,
            "mutability": "mutable",
            "name": "nextOrderId",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "338:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "338:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 26,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "364:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb431b6",
            "id": 34,
            "mutability": "mutable",
            "name": "orderBook",
            "nodeType": "VariableDeclaration",
            "scope": 335,
            "src": "372:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
              "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 28,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "381:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "372:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
              },
              "valueType": {
                "id": 32,
                "keyType": {
                  "id": 29,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "392:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                  "typeString": "mapping(uint256 => struct Dex.Order[])"
                },
                "valueType": {
                  "baseType": {
                    "id": 30,
                    "name": "Order",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 24,
                    "src": "409:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                      "typeString": "struct Dex.Order"
                    }
                  },
                  "id": 31,
                  "nodeType": "ArrayTypeName",
                  "src": "409:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                    "typeString": "struct Dex.Order[]"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "526:51:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 44,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "542:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 46,
                      "indexExpression": {
                        "id": 45,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "552:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "542:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 51,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 49,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "565:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "560:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 47,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "560:4:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "560:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "542:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 43,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "535:36:0"
                }
              ]
            },
            "functionSelector": "ba58ea68",
            "id": 54,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOrderBook",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "464:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "480:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "480:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:27:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "511:14:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Order_$24_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Dex.Order[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40,
                      "name": "Order",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 24,
                      "src": "511:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                        "typeString": "struct Dex.Order"
                      }
                    },
                    "id": 41,
                    "nodeType": "ArrayTypeName",
                    "src": "511:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                      "typeString": "struct Dex.Order[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:16:0"
            },
            "scope": 335,
            "src": "442:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "670:1889:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 65,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "684:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 66,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "692:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "692:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "684:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 85,
                        "name": "side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "847:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 86,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "855:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "src": "855:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "847:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 102,
                    "nodeType": "IfStatement",
                    "src": "844:127:0",
                    "trueBody": {
                      "id": 101,
                      "nodeType": "Block",
                      "src": "873:98:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 97,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 90,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 382,
                                      "src": "892:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                      }
                                    },
                                    "id": 93,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 91,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "901:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 92,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "901:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "892:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                      "typeString": "mapping(bytes32 => uint256)"
                                    }
                                  },
                                  "id": 95,
                                  "indexExpression": {
                                    "id": 94,
                                    "name": "ticker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58,
                                    "src": "913:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "892:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 96,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "924:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "892:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "496e73756666696369656e7420746f6b656e20616d6f756e7421",
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "932:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478",
                                  "typeString": "literal_string \"Insufficient token amount!\""
                                },
                                "value": "Insufficient token amount!"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478",
                                  "typeString": "literal_string \"Insufficient token amount!\""
                                }
                              ],
                              "id": 89,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "src": "884:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 99,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "884:77:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 100,
                          "nodeType": "ExpressionStatement",
                          "src": "884:77:0"
                        }
                      ]
                    }
                  },
                  "id": 103,
                  "nodeType": "IfStatement",
                  "src": "681:290:0",
                  "trueBody": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "709:122:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 70,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 382,
                                    "src": "728:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => uint256))"
                                    }
                                  },
                                  "id": 73,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 71,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "737:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 72,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "737:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "728:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                                    "typeString": "mapping(bytes32 => uint256)"
                                  }
                                },
                                "id": 75,
                                "indexExpression": {
                                  "hexValue": "455448",
                                  "id": 74,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "749:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                    "typeString": "literal_string \"ETH\""
                                  },
                                  "value": "ETH"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "728:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 78,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 62,
                                    "src": "770:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 76,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60,
                                    "src": "759:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 852,
                                  "src": "759:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "759:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "728:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e742066756e647320746f206372656174652074686973206f7264657221",
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "778:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6",
                                "typeString": "literal_string \"Insufficient funds to create this order!\""
                              },
                              "value": "Insufficient funds to create this order!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6",
                                "typeString": "literal_string \"Insufficient funds to create this order!\""
                              }
                            ],
                            "id": 69,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "720:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "720:101:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "720:101:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    107
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "orders",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "1085:22:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                        "typeString": "struct Dex.Order[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 105,
                          "name": "Order",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 24,
                          "src": "1085:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                            "typeString": "struct Dex.Order"
                          }
                        },
                        "id": 106,
                        "nodeType": "ArrayTypeName",
                        "src": "1085:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 108,
                        "name": "orderBook",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1110:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$_$",
                          "typeString": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))"
                        }
                      },
                      "id": 110,
                      "indexExpression": {
                        "id": 109,
                        "name": "ticker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1120:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1110:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Order_$24_storage_$dyn_storage_$",
                        "typeString": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                      }
                    },
                    "id": 115,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 113,
                          "name": "side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1133:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          }
                        ],
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1128:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1128:4:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1128:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1110:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage",
                      "typeString": "struct Dex.Order storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1085:54:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 121,
                            "name": "nextOrderId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1393:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 122,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1406:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1406:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 124,
                            "name": "side",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "1418:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            }
                          },
                          {
                            "id": 125,
                            "name": "ticker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "1424:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 126,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "1432:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 127,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "1440:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_enum$_Side_$11",
                              "typeString": "enum Dex.Side"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 120,
                          "name": "Order",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "1387:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Order_$24_storage_ptr_$",
                            "typeString": "type(struct Dex.Order storage pointer)"
                          }
                        },
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:59:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                          "typeString": "struct Dex.Order memory"
                        }
                      ],
                      "expression": {
                        "id": 117,
                        "name": "orders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 107,
                        "src": "1365:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                        }
                      },
                      "id": 119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1365:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Order_$24_storage_$returns$__$",
                        "typeString": "function (struct Dex.Order storage ref)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1365:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "1365:90:0"
                },
                {
                  "assignments": [
                    132
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 132,
                      "mutability": "mutable",
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 251,
                      "src": "1566:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1566:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 143,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 133,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1575:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1575:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1591:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1575:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1615:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1575:41:0",
                    "trueExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 137,
                          "name": "orders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "1595:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                            "typeString": "struct Dex.Order storage ref[] storage pointer"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1595:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1611:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1595:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1566:50:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 144,
                      "name": "side",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "1757:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 145,
                        "name": "Side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "1765:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                          "typeString": "type(enum Dex.Side)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BUY",
                      "nodeType": "MemberAccess",
                      "src": "1765:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      }
                    },
                    "src": "1757:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_Side_$11",
                        "typeString": "enum Dex.Side"
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 195,
                        "name": "side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "2200:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 196,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2208:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$11_$",
                            "typeString": "type(enum Dex.Side)"
                          }
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "SELL",
                        "nodeType": "MemberAccess",
                        "src": "2208:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$11",
                          "typeString": "enum Dex.Side"
                        }
                      },
                      "src": "2200:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 246,
                    "nodeType": "IfStatement",
                    "src": "2197:333:0",
                    "trueBody": {
                      "id": 245,
                      "nodeType": "Block",
                      "src": "2218:312:0",
                      "statements": [
                        {
                          "body": {
                            "id": 243,
                            "nodeType": "Block",
                            "src": "2246:271:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 202,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 107,
                                        "src": "2267:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 206,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 203,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 132,
                                          "src": "2274:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 204,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2278:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "2274:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2267:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 207,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "2267:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<",
                                  "rightExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 208,
                                        "name": "orders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 107,
                                        "src": "2289:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                          "typeString": "struct Dex.Order storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 210,
                                      "indexExpression": {
                                        "id": 209,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 132,
                                        "src": "2296:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2289:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage",
                                        "typeString": "struct Dex.Order storage ref"
                                      }
                                    },
                                    "id": 211,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23,
                                    "src": "2289:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2267:37:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 215,
                                "nodeType": "IfStatement",
                                "src": "2263:84:0",
                                "trueBody": {
                                  "id": 214,
                                  "nodeType": "Block",
                                  "src": "2305:42:0",
                                  "statements": [
                                    {
                                      "id": 213,
                                      "nodeType": "Break",
                                      "src": "2324:5:0"
                                    }
                                  ]
                                }
                              },
                              {
                                "assignments": [
                                  217
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 217,
                                    "mutability": "mutable",
                                    "name": "swapOrder",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 243,
                                    "src": "2363:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                      "typeString": "struct Dex.Order"
                                    },
                                    "typeName": {
                                      "id": 216,
                                      "name": "Order",
                                      "nodeType": "UserDefinedTypeName",
                                      "referencedDeclaration": 24,
                                      "src": "2363:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                                        "typeString": "struct Dex.Order"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 223,
                                "initialValue": {
                                  "baseExpression": {
                                    "id": 218,
                                    "name": "orders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "2388:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                      "typeString": "struct Dex.Order storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 222,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 219,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 132,
                                      "src": "2395:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2399:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "2395:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2388:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "2363:38:0"
                              },
                              {
                                "expression": {
                                  "id": 232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 224,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "2418:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 228,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 227,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 225,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 132,
                                        "src": "2425:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 226,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2429:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2425:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "2418:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "baseExpression": {
                                      "id": 229,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "2434:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 231,
                                    "indexExpression": {
                                      "id": 230,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 132,
                                      "src": "2441:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2434:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "src": "2418:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "id": 233,
                                "nodeType": "ExpressionStatement",
                                "src": "2418:25:0"
                              },
                              {
                                "expression": {
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "baseExpression": {
                                      "id": 234,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "2460:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 236,
                                    "indexExpression": {
                                      "id": 235,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 132,
                                      "src": "2467:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "IndexAccess",
                                    "src": "2460:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 237,
                                    "name": "swapOrder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 217,
                                    "src": "2472:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                      "typeString": "struct Dex.Order memory"
                                    }
                                  },
                                  "src": "2460:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "id": 239,
                                "nodeType": "ExpressionStatement",
                                "src": "2460:21:0"
                              },
                              {
                                "expression": {
                                  "id": 241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "--",
                                  "prefix": false,
                                  "src": "2498:3:0",
                                  "subExpression": {
                                    "id": 240,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "2498:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 242,
                                "nodeType": "ExpressionStatement",
                                "src": "2498:3:0"
                              }
                            ]
                          },
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 199,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "2240:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2244:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2240:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 244,
                          "nodeType": "WhileStatement",
                          "src": "2233:284:0"
                        }
                      ]
                    }
                  },
                  "id": 247,
                  "nodeType": "IfStatement",
                  "src": "1754:776:0",
                  "trueBody": {
                    "id": 194,
                    "nodeType": "Block",
                    "src": "1774:307:0",
                    "statements": [
                      {
                        "body": {
                          "id": 192,
                          "nodeType": "Block",
                          "src": "1798:270:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 151,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "1818:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 155,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 154,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 152,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 132,
                                        "src": "1825:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1829:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "1825:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1818:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "id": 156,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "1818:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 157,
                                      "name": "orders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "1840:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                        "typeString": "struct Dex.Order storage ref[] storage pointer"
                                      }
                                    },
                                    "id": 159,
                                    "indexExpression": {
                                      "id": 158,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 132,
                                      "src": "1847:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1840:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage",
                                      "typeString": "struct Dex.Order storage ref"
                                    }
                                  },
                                  "id": 160,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23,
                                  "src": "1840:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1818:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 164,
                              "nodeType": "IfStatement",
                              "src": "1815:83:0",
                              "trueBody": {
                                "id": 163,
                                "nodeType": "Block",
                                "src": "1856:42:0",
                                "statements": [
                                  {
                                    "id": 162,
                                    "nodeType": "Break",
                                    "src": "1875:5:0"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                166
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 166,
                                  "mutability": "mutable",
                                  "name": "swapOrder",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 192,
                                  "src": "1914:22:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                    "typeString": "struct Dex.Order"
                                  },
                                  "typeName": {
                                    "id": 165,
                                    "name": "Order",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 24,
                                    "src": "1914:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Order_$24_storage_ptr",
                                      "typeString": "struct Dex.Order"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 172,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 167,
                                  "name": "orders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 107,
                                  "src": "1939:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                    "typeString": "struct Dex.Order storage ref[] storage pointer"
                                  }
                                },
                                "id": 171,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 170,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 168,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "1946:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 169,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1950:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "1946:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1939:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$24_storage",
                                  "typeString": "struct Dex.Order storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1914:38:0"
                            },
                            {
                              "expression": {
                                "id": 181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 173,
                                    "name": "orders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "1969:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                      "typeString": "struct Dex.Order storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 177,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 174,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 132,
                                      "src": "1976:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 175,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1980:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "1976:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1969:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 178,
                                    "name": "orders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "1985:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                      "typeString": "struct Dex.Order storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 180,
                                  "indexExpression": {
                                    "id": 179,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "1992:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1985:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "src": "1969:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$24_storage",
                                  "typeString": "struct Dex.Order storage ref"
                                }
                              },
                              "id": 182,
                              "nodeType": "ExpressionStatement",
                              "src": "1969:25:0"
                            },
                            {
                              "expression": {
                                "id": 187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 183,
                                    "name": "orders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 107,
                                    "src": "2011:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Order_$24_storage_$dyn_storage_ptr",
                                      "typeString": "struct Dex.Order storage ref[] storage pointer"
                                    }
                                  },
                                  "id": 185,
                                  "indexExpression": {
                                    "id": 184,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 132,
                                    "src": "2018:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2011:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_storage",
                                    "typeString": "struct Dex.Order storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 186,
                                  "name": "swapOrder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 166,
                                  "src": "2023:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                    "typeString": "struct Dex.Order memory"
                                  }
                                },
                                "src": "2011:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Order_$24_storage",
                                  "typeString": "struct Dex.Order storage ref"
                                }
                              },
                              "id": 188,
                              "nodeType": "ExpressionStatement",
                              "src": "2011:21:0"
                            },
                            {
                              "expression": {
                                "id": 190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "2049:3:0",
                                "subExpression": {
                                  "id": 189,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 132,
                                  "src": "2049:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 191,
                              "nodeType": "ExpressionStatement",
                              "src": "2049:3:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 148,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "1792:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1796:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1792:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 193,
                        "nodeType": "WhileStatement",
                        "src": "1785:283:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2542:13:0",
                    "subExpression": {
                      "id": 248,
                      "name": "nextOrderId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "2542:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:13:0"
                }
              ]
            },
            "functionSelector": "6f3b62f9",
            "id": 252,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createLimitOrder",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "side",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "611:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$11",
                    "typeString": "enum Dex.Side"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11,
                    "src": "611:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$11",
                      "typeString": "enum Dex.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "ticker",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "622:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "638:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 252,
                  "src": "651:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "651:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "610:52:0"
            },
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:0:0"
            },
            "scope": 335,
            "src": "585:1974:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 279,
              "nodeType": "Block",
              "src": "2616:107:0",
              "statements": [
                {
                  "expression": {
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 255,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "2626:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 262,
                        "indexExpression": {
                          "expression": {
                            "id": 256,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2635:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2635:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2626:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 263,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "455448",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2655:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            },
                            "value": "ETH"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            }
                          ],
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 258,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2647:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2647:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2626:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2706:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2706:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 264,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "2665:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => uint256))"
                              }
                            },
                            "id": 267,
                            "indexExpression": {
                              "expression": {
                                "id": 265,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2674:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2674:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2665:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 272,
                          "indexExpression": {
                            "arguments": [
                              {
                                "hexValue": "455448",
                                "id": 270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2694:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                },
                                "value": "ETH"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                }
                              ],
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2686:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 268,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "2686:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2686:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2665:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 796,
                        "src": "2665:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2665:51:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2626:90:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:90:0"
                }
              ]
            },
            "functionSelector": "439370b1",
            "id": 280,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2596:2:0"
            },
            "returnParameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2616:0:0"
            },
            "scope": 335,
            "src": "2577:146:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "2773:233:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 286,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "2791:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => uint256))"
                              }
                            },
                            "id": 289,
                            "indexExpression": {
                              "expression": {
                                "id": 287,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2800:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2800:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2791:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "arguments": [
                              {
                                "hexValue": "455448",
                                "id": 292,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2820:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                },
                                "value": "ETH"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                }
                              ],
                              "id": 291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2812:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 290,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "2812:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2812:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2791:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 295,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2831:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2791:46:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e7375666669656e742062616c616e6365",
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2838:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715",
                          "typeString": "literal_string \"Insuffient balance\""
                        },
                        "value": "Insuffient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715",
                          "typeString": "literal_string \"Insuffient balance\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2783:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2783:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "ExpressionStatement",
                  "src": "2783:76:0"
                },
                {
                  "expression": {
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 300,
                          "name": "balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "2869:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => uint256))"
                          }
                        },
                        "id": 307,
                        "indexExpression": {
                          "expression": {
                            "id": 301,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2878:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2878:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2869:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                          "typeString": "mapping(bytes32 => uint256)"
                        }
                      },
                      "id": 308,
                      "indexExpression": {
                        "arguments": [
                          {
                            "hexValue": "455448",
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2898:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            },
                            "value": "ETH"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                              "typeString": "literal_string \"ETH\""
                            }
                          ],
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 303,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2890:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2890:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2869:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 319,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2949:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 309,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "2908:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => uint256))"
                              }
                            },
                            "id": 312,
                            "indexExpression": {
                              "expression": {
                                "id": 310,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2917:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2917:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2908:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                              "typeString": "mapping(bytes32 => uint256)"
                            }
                          },
                          "id": 317,
                          "indexExpression": {
                            "arguments": [
                              {
                                "hexValue": "455448",
                                "id": 315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2937:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                },
                                "value": "ETH"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                  "typeString": "literal_string \"ETH\""
                                }
                              ],
                              "id": 314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2929:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 313,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "2929:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2929:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2908:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 818,
                        "src": "2908:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2908:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2869:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "2869:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2996:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2966:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2966:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2966:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 328,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 282,
                          "src": "2988:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2966:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2966:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "2966:33:0"
                }
              ]
            },
            "functionSelector": "c311d049",
            "id": 334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEth",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "2751:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2750:13:0"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:0:0"
            },
            "scope": 335,
            "src": "2730:276:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 336,
        "src": "96:2917:0"
      }
    ],
    "src": "0:3015:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/sound/Desktop/EthProjects/DEX/contracts/Dex.sol",
      "exportedSymbols": {
        "Context": [
          1070
        ],
        "Dex": [
          335
        ],
        "IERC20": [
          1047
        ],
        "Ownable": [
          614
        ],
        "SafeMath": [
          969
        ],
        "Wallet": [
          504
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:31:0"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 2,
        "name": "PragmaDirective",
        "src": "33:33:0"
      },
      {
        "attributes": {
          "SourceUnit": 505,
          "absolutePath": "/C/Users/sound/Desktop/EthProjects/DEX/contracts/Wallet.sol",
          "file": "./Wallet.sol",
          "scope": 336,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3,
        "name": "ImportDirective",
        "src": "70:22:0"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            504,
            614,
            1070
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            335,
            504,
            614,
            1070
          ],
          "name": "Dex",
          "scope": 336
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Wallet",
                  "referencedDeclaration": 504,
                  "type": "contract Wallet"
                },
                "id": 4,
                "name": "UserDefinedTypeName",
                "src": "112:6:0"
              }
            ],
            "id": 5,
            "name": "InheritanceSpecifier",
            "src": "112:6:0"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "SafeMath",
                  "referencedDeclaration": 969,
                  "type": "library SafeMath"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "131:8:0"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 7,
                "name": "ElementaryTypeName",
                "src": "144:7:0"
              }
            ],
            "id": 8,
            "name": "UsingForDirective",
            "src": "125:27:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "BUY"
                },
                "id": 9,
                "name": "EnumValue",
                "src": "178:3:0"
              },
              {
                "attributes": {
                  "name": "SELL"
                },
                "id": 10,
                "name": "EnumValue",
                "src": "190:4:0"
              }
            ],
            "id": 11,
            "name": "EnumDefinition",
            "src": "160:41:0"
          },
          {
            "attributes": {
              "canonicalName": "Dex.Order",
              "name": "Order",
              "scope": 335,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "id",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 12,
                    "name": "ElementaryTypeName",
                    "src": "226:4:0"
                  }
                ],
                "id": 13,
                "name": "VariableDeclaration",
                "src": "226:7:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "trader",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 14,
                    "name": "ElementaryTypeName",
                    "src": "240:7:0"
                  }
                ],
                "id": 15,
                "name": "VariableDeclaration",
                "src": "240:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "side",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum Dex.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 11,
                      "type": "enum Dex.Side"
                    },
                    "id": 16,
                    "name": "UserDefinedTypeName",
                    "src": "261:4:0"
                  }
                ],
                "id": 17,
                "name": "VariableDeclaration",
                "src": "261:9:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "ticker",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 18,
                    "name": "ElementaryTypeName",
                    "src": "277:7:0"
                  }
                ],
                "id": 19,
                "name": "VariableDeclaration",
                "src": "277:14:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 20,
                    "name": "ElementaryTypeName",
                    "src": "298:4:0"
                  }
                ],
                "id": 21,
                "name": "VariableDeclaration",
                "src": "298:11:0"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "scope": 24,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 22,
                    "name": "ElementaryTypeName",
                    "src": "316:4:0"
                  }
                ],
                "id": 23,
                "name": "VariableDeclaration",
                "src": "316:10:0"
              }
            ],
            "id": 24,
            "name": "StructDefinition",
            "src": "207:125:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "2a58b330",
              "mutability": "mutable",
              "name": "nextOrderId",
              "scope": 335,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 25,
                "name": "ElementaryTypeName",
                "src": "338:4:0"
              },
              {
                "attributes": {
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 26,
                "name": "Literal",
                "src": "364:1:0"
              }
            ],
            "id": 27,
            "name": "VariableDeclaration",
            "src": "338:27:0"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0bb431b6",
              "mutability": "mutable",
              "name": "orderBook",
              "scope": 335,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order[]))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 28,
                    "name": "ElementaryTypeName",
                    "src": "381:7:0"
                  },
                  {
                    "attributes": {
                      "type": "mapping(uint256 => struct Dex.Order[])"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 29,
                        "name": "ElementaryTypeName",
                        "src": "401:4:0"
                      },
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 30,
                            "name": "UserDefinedTypeName",
                            "src": "409:5:0"
                          }
                        ],
                        "id": 31,
                        "name": "ArrayTypeName",
                        "src": "409:7:0"
                      }
                    ],
                    "id": 32,
                    "name": "Mapping",
                    "src": "392:25:0"
                  }
                ],
                "id": 33,
                "name": "Mapping",
                "src": "372:46:0"
              }
            ],
            "id": 34,
            "name": "VariableDeclaration",
            "src": "372:63:0"
          },
          {
            "attributes": {
              "functionSelector": "ba58ea68",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getOrderBook",
              "scope": 335,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 35,
                        "name": "ElementaryTypeName",
                        "src": "464:7:0"
                      }
                    ],
                    "id": 36,
                    "name": "VariableDeclaration",
                    "src": "464:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 37,
                        "name": "UserDefinedTypeName",
                        "src": "480:4:0"
                      }
                    ],
                    "id": 38,
                    "name": "VariableDeclaration",
                    "src": "480:9:0"
                  }
                ],
                "id": 39,
                "name": "ParameterList",
                "src": "463:27:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 54,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct Dex.Order[]",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "struct Dex.Order[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Order",
                              "referencedDeclaration": 24,
                              "type": "struct Dex.Order"
                            },
                            "id": 40,
                            "name": "UserDefinedTypeName",
                            "src": "511:5:0"
                          }
                        ],
                        "id": 41,
                        "name": "ArrayTypeName",
                        "src": "511:7:0"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "511:14:0"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "510:16:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 43
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "542:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 36,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 45,
                                "name": "Identifier",
                                "src": "552:6:0"
                              }
                            ],
                            "id": 46,
                            "name": "IndexAccess",
                            "src": "542:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 47,
                                    "name": "ElementaryTypeName",
                                    "src": "560:4:0"
                                  }
                                ],
                                "id": 48,
                                "name": "ElementaryTypeNameExpression",
                                "src": "560:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 38,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 49,
                                "name": "Identifier",
                                "src": "565:4:0"
                              }
                            ],
                            "id": 50,
                            "name": "FunctionCall",
                            "src": "560:10:0"
                          }
                        ],
                        "id": 51,
                        "name": "IndexAccess",
                        "src": "542:29:0"
                      }
                    ],
                    "id": 52,
                    "name": "Return",
                    "src": "535:36:0"
                  }
                ],
                "id": 53,
                "name": "Block",
                "src": "526:51:0"
              }
            ],
            "id": 54,
            "name": "FunctionDefinition",
            "src": "442:135:0"
          },
          {
            "attributes": {
              "functionSelector": "6f3b62f9",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "createLimitOrder",
              "scope": 335,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "side",
                      "scope": 252,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum Dex.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 11,
                          "type": "enum Dex.Side"
                        },
                        "id": 55,
                        "name": "UserDefinedTypeName",
                        "src": "611:4:0"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "611:9:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "ticker",
                      "scope": 252,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 57,
                        "name": "ElementaryTypeName",
                        "src": "622:7:0"
                      }
                    ],
                    "id": 58,
                    "name": "VariableDeclaration",
                    "src": "622:14:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 252,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "638:4:0"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "638:11:0"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 252,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 61,
                        "name": "ElementaryTypeName",
                        "src": "651:4:0"
                      }
                    ],
                    "id": 62,
                    "name": "VariableDeclaration",
                    "src": "651:10:0"
                  }
                ],
                "id": 63,
                "name": "ParameterList",
                "src": "610:52:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 64,
                "name": "ParameterList",
                "src": "670:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 56,
                              "type": "enum Dex.Side",
                              "value": "side"
                            },
                            "id": 65,
                            "name": "Identifier",
                            "src": "684:4:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 66,
                                "name": "Identifier",
                                "src": "692:4:0"
                              }
                            ],
                            "id": 67,
                            "name": "MemberAccess",
                            "src": "692:8:0"
                          }
                        ],
                        "id": 68,
                        "name": "BinaryOperation",
                        "src": "684:16:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_stringliteral_c5e3d2be8695645734c1c48d94a4fecab545fddd0fd0e9f277d81a2e4cb5e2f6",
                                          "typeString": "literal_string \"Insufficient funds to create this order!\""
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        4294967278,
                                        4294967278
                                      ],
                                      "referencedDeclaration": 4294967278,
                                      "type": "function (bool,string memory) pure",
                                      "value": "require"
                                    },
                                    "id": 69,
                                    "name": "Identifier",
                                    "src": "720:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">=",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "mapping(bytes32 => uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 382,
                                                  "type": "mapping(address => mapping(bytes32 => uint256))",
                                                  "value": "balances"
                                                },
                                                "id": 70,
                                                "name": "Identifier",
                                                "src": "728:8:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "sender",
                                                  "type": "address payable"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 4294967281,
                                                      "type": "msg",
                                                      "value": "msg"
                                                    },
                                                    "id": 71,
                                                    "name": "Identifier",
                                                    "src": "737:3:0"
                                                  }
                                                ],
                                                "id": 72,
                                                "name": "MemberAccess",
                                                "src": "737:10:0"
                                              }
                                            ],
                                            "id": 73,
                                            "name": "IndexAccess",
                                            "src": "728:20:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 74,
                                            "name": "Literal",
                                            "src": "749:5:0"
                                          }
                                        ],
                                        "id": 75,
                                        "name": "IndexAccess",
                                        "src": "728:27:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "uint256",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "mul",
                                              "referencedDeclaration": 852,
                                              "type": "function (uint256,uint256) pure returns (uint256)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 60,
                                                  "type": "uint256",
                                                  "value": "amount"
                                                },
                                                "id": 76,
                                                "name": "Identifier",
                                                "src": "759:6:0"
                                              }
                                            ],
                                            "id": 77,
                                            "name": "MemberAccess",
                                            "src": "759:10:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 62,
                                              "type": "uint256",
                                              "value": "price"
                                            },
                                            "id": 78,
                                            "name": "Identifier",
                                            "src": "770:5:0"
                                          }
                                        ],
                                        "id": 79,
                                        "name": "FunctionCall",
                                        "src": "759:17:0"
                                      }
                                    ],
                                    "id": 80,
                                    "name": "BinaryOperation",
                                    "src": "728:48:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "496e73756666696369656e742066756e647320746f206372656174652074686973206f7264657221",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"Insufficient funds to create this order!\"",
                                      "value": "Insufficient funds to create this order!"
                                    },
                                    "id": 81,
                                    "name": "Literal",
                                    "src": "778:42:0"
                                  }
                                ],
                                "id": 82,
                                "name": "FunctionCall",
                                "src": "720:101:0"
                              }
                            ],
                            "id": 83,
                            "name": "ExpressionStatement",
                            "src": "720:101:0"
                          }
                        ],
                        "id": 84,
                        "name": "Block",
                        "src": "709:122:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$11",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 85,
                                "name": "Identifier",
                                "src": "847:4:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 86,
                                    "name": "Identifier",
                                    "src": "855:4:0"
                                  }
                                ],
                                "id": 87,
                                "name": "MemberAccess",
                                "src": "855:9:0"
                              }
                            ],
                            "id": 88,
                            "name": "BinaryOperation",
                            "src": "847:17:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "tuple()",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            {
                                              "typeIdentifier": "t_stringliteral_ef6c99a6d3f1611669070f68cb020f4c60ac62f9993ef8620567482cf07cf478",
                                              "typeString": "literal_string \"Insufficient token amount!\""
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            4294967278,
                                            4294967278
                                          ],
                                          "referencedDeclaration": 4294967278,
                                          "type": "function (bool,string memory) pure",
                                          "value": "require"
                                        },
                                        "id": 89,
                                        "name": "Identifier",
                                        "src": "884:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "mapping(bytes32 => uint256)"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 382,
                                                      "type": "mapping(address => mapping(bytes32 => uint256))",
                                                      "value": "balances"
                                                    },
                                                    "id": 90,
                                                    "name": "Identifier",
                                                    "src": "892:8:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "member_name": "sender",
                                                      "type": "address payable"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 4294967281,
                                                          "type": "msg",
                                                          "value": "msg"
                                                        },
                                                        "id": 91,
                                                        "name": "Identifier",
                                                        "src": "901:3:0"
                                                      }
                                                    ],
                                                    "id": 92,
                                                    "name": "MemberAccess",
                                                    "src": "901:10:0"
                                                  }
                                                ],
                                                "id": 93,
                                                "name": "IndexAccess",
                                                "src": "892:20:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 58,
                                                  "type": "bytes32",
                                                  "value": "ticker"
                                                },
                                                "id": 94,
                                                "name": "Identifier",
                                                "src": "913:6:0"
                                              }
                                            ],
                                            "id": 95,
                                            "name": "IndexAccess",
                                            "src": "892:28:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 60,
                                              "type": "uint256",
                                              "value": "amount"
                                            },
                                            "id": 96,
                                            "name": "Identifier",
                                            "src": "924:6:0"
                                          }
                                        ],
                                        "id": 97,
                                        "name": "BinaryOperation",
                                        "src": "892:38:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "496e73756666696369656e7420746f6b656e20616d6f756e7421",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "string",
                                          "type": "literal_string \"Insufficient token amount!\"",
                                          "value": "Insufficient token amount!"
                                        },
                                        "id": 98,
                                        "name": "Literal",
                                        "src": "932:28:0"
                                      }
                                    ],
                                    "id": 99,
                                    "name": "FunctionCall",
                                    "src": "884:77:0"
                                  }
                                ],
                                "id": 100,
                                "name": "ExpressionStatement",
                                "src": "884:77:0"
                              }
                            ],
                            "id": 101,
                            "name": "Block",
                            "src": "873:98:0"
                          }
                        ],
                        "id": 102,
                        "name": "IfStatement",
                        "src": "844:127:0"
                      }
                    ],
                    "id": 103,
                    "name": "IfStatement",
                    "src": "681:290:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        107
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "orders",
                          "scope": 251,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct Dex.Order[]",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "struct Dex.Order[]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "Order",
                                  "referencedDeclaration": 24,
                                  "type": "struct Dex.Order"
                                },
                                "id": 105,
                                "name": "UserDefinedTypeName",
                                "src": "1085:5:0"
                              }
                            ],
                            "id": 106,
                            "name": "ArrayTypeName",
                            "src": "1085:7:0"
                          }
                        ],
                        "id": 107,
                        "name": "VariableDeclaration",
                        "src": "1085:22:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct Dex.Order storage ref[] storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(uint256 => struct Dex.Order storage ref[] storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 34,
                                  "type": "mapping(bytes32 => mapping(uint256 => struct Dex.Order storage ref[] storage ref))",
                                  "value": "orderBook"
                                },
                                "id": 108,
                                "name": "Identifier",
                                "src": "1110:9:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 109,
                                "name": "Identifier",
                                "src": "1120:6:0"
                              }
                            ],
                            "id": 110,
                            "name": "IndexAccess",
                            "src": "1110:17:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "uint"
                                    },
                                    "id": 111,
                                    "name": "ElementaryTypeName",
                                    "src": "1128:4:0"
                                  }
                                ],
                                "id": 112,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1128:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 113,
                                "name": "Identifier",
                                "src": "1133:4:0"
                              }
                            ],
                            "id": 114,
                            "name": "FunctionCall",
                            "src": "1128:10:0"
                          }
                        ],
                        "id": 115,
                        "name": "IndexAccess",
                        "src": "1110:29:0"
                      }
                    ],
                    "id": 116,
                    "name": "VariableDeclarationStatement",
                    "src": "1085:54:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Order_$24_memory_ptr",
                                  "typeString": "struct Dex.Order memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "type": "function (struct Dex.Order storage ref)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 107,
                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                  "value": "orders"
                                },
                                "id": 117,
                                "name": "Identifier",
                                "src": "1365:6:0"
                              }
                            ],
                            "id": 119,
                            "name": "MemberAccess",
                            "src": "1365:11:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "struct Dex.Order memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_Side_$11",
                                      "typeString": "enum Dex.Side"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 24,
                                  "type": "type(struct Dex.Order storage pointer)",
                                  "value": "Order"
                                },
                                "id": 120,
                                "name": "Identifier",
                                "src": "1387:5:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 27,
                                  "type": "uint256",
                                  "value": "nextOrderId"
                                },
                                "id": 121,
                                "name": "Identifier",
                                "src": "1393:11:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 122,
                                    "name": "Identifier",
                                    "src": "1406:3:0"
                                  }
                                ],
                                "id": 123,
                                "name": "MemberAccess",
                                "src": "1406:10:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 124,
                                "name": "Identifier",
                                "src": "1418:4:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "bytes32",
                                  "value": "ticker"
                                },
                                "id": 125,
                                "name": "Identifier",
                                "src": "1424:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 126,
                                "name": "Identifier",
                                "src": "1432:6:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 62,
                                  "type": "uint256",
                                  "value": "price"
                                },
                                "id": 127,
                                "name": "Identifier",
                                "src": "1440:5:0"
                              }
                            ],
                            "id": 128,
                            "name": "FunctionCall",
                            "src": "1387:59:0"
                          }
                        ],
                        "id": 129,
                        "name": "FunctionCall",
                        "src": "1365:90:0"
                      }
                    ],
                    "id": 130,
                    "name": "ExpressionStatement",
                    "src": "1365:90:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        132
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "i",
                          "scope": 251,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 131,
                            "name": "ElementaryTypeName",
                            "src": "1566:4:0"
                          }
                        ],
                        "id": 132,
                        "name": "VariableDeclaration",
                        "src": "1566:6:0"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 107,
                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                      "value": "orders"
                                    },
                                    "id": 133,
                                    "name": "Identifier",
                                    "src": "1575:6:0"
                                  }
                                ],
                                "id": 134,
                                "name": "MemberAccess",
                                "src": "1575:13:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 135,
                                "name": "Literal",
                                "src": "1591:1:0"
                              }
                            ],
                            "id": 136,
                            "name": "BinaryOperation",
                            "src": "1575:17:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "-",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "length",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 107,
                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                      "value": "orders"
                                    },
                                    "id": 137,
                                    "name": "Identifier",
                                    "src": "1595:6:0"
                                  }
                                ],
                                "id": 138,
                                "name": "MemberAccess",
                                "src": "1595:13:0"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 139,
                                "name": "Literal",
                                "src": "1611:1:0"
                              }
                            ],
                            "id": 140,
                            "name": "BinaryOperation",
                            "src": "1595:17:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 141,
                            "name": "Literal",
                            "src": "1615:1:0"
                          }
                        ],
                        "id": 142,
                        "name": "Conditional",
                        "src": "1575:41:0"
                      }
                    ],
                    "id": 143,
                    "name": "VariableDeclarationStatement",
                    "src": "1566:50:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_Side_$11",
                            "typeString": "enum Dex.Side"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 56,
                              "type": "enum Dex.Side",
                              "value": "side"
                            },
                            "id": 144,
                            "name": "Identifier",
                            "src": "1757:4:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "BUY",
                              "type": "enum Dex.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "type(enum Dex.Side)",
                                  "value": "Side"
                                },
                                "id": 145,
                                "name": "Identifier",
                                "src": "1765:4:0"
                              }
                            ],
                            "id": 146,
                            "name": "MemberAccess",
                            "src": "1765:8:0"
                          }
                        ],
                        "id": 147,
                        "name": "BinaryOperation",
                        "src": "1757:16:0"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": ">",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 132,
                                      "type": "uint256",
                                      "value": "i"
                                    },
                                    "id": 148,
                                    "name": "Identifier",
                                    "src": "1792:1:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 149,
                                    "name": "Literal",
                                    "src": "1796:1:0"
                                  }
                                ],
                                "id": 150,
                                "name": "BinaryOperation",
                                "src": "1792:5:0"
                              },
                              {
                                "children": [
                                  {
                                    "attributes": {},
                                    "children": [
                                      {
                                        "attributes": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": ">",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "price",
                                              "referencedDeclaration": 23,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 107,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 151,
                                                    "name": "Identifier",
                                                    "src": "1818:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "-",
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 132,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 152,
                                                        "name": "Identifier",
                                                        "src": "1825:1:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "31",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 1",
                                                          "value": "1"
                                                        },
                                                        "id": 153,
                                                        "name": "Literal",
                                                        "src": "1829:1:0"
                                                      }
                                                    ],
                                                    "id": 154,
                                                    "name": "BinaryOperation",
                                                    "src": "1825:5:0"
                                                  }
                                                ],
                                                "id": 155,
                                                "name": "IndexAccess",
                                                "src": "1818:13:0"
                                              }
                                            ],
                                            "id": 156,
                                            "name": "MemberAccess",
                                            "src": "1818:19:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "price",
                                              "referencedDeclaration": 23,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 107,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 157,
                                                    "name": "Identifier",
                                                    "src": "1840:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 132,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 158,
                                                    "name": "Identifier",
                                                    "src": "1847:1:0"
                                                  }
                                                ],
                                                "id": 159,
                                                "name": "IndexAccess",
                                                "src": "1840:9:0"
                                              }
                                            ],
                                            "id": 160,
                                            "name": "MemberAccess",
                                            "src": "1840:15:0"
                                          }
                                        ],
                                        "id": 161,
                                        "name": "BinaryOperation",
                                        "src": "1818:37:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "id": 162,
                                            "name": "Break",
                                            "src": "1875:5:0"
                                          }
                                        ],
                                        "id": 163,
                                        "name": "Block",
                                        "src": "1856:42:0"
                                      }
                                    ],
                                    "id": 164,
                                    "name": "IfStatement",
                                    "src": "1815:83:0"
                                  },
                                  {
                                    "attributes": {
                                      "assignments": [
                                        166
                                      ]
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "constant": false,
                                          "mutability": "mutable",
                                          "name": "swapOrder",
                                          "scope": 192,
                                          "stateVariable": false,
                                          "storageLocation": "memory",
                                          "type": "struct Dex.Order",
                                          "visibility": "internal"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "Order",
                                              "referencedDeclaration": 24,
                                              "type": "struct Dex.Order"
                                            },
                                            "id": 165,
                                            "name": "UserDefinedTypeName",
                                            "src": "1914:5:0"
                                          }
                                        ],
                                        "id": 166,
                                        "name": "VariableDeclaration",
                                        "src": "1914:22:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "struct Dex.Order storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 107,
                                              "type": "struct Dex.Order storage ref[] storage pointer",
                                              "value": "orders"
                                            },
                                            "id": 167,
                                            "name": "Identifier",
                                            "src": "1939:6:0"
                                          },
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "-",
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 132,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 168,
                                                "name": "Identifier",
                                                "src": "1946:1:0"
                                              },
                                              {
                                                "attributes": {
                                                  "hexvalue": "31",
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "token": "number",
                                                  "type": "int_const 1",
                                                  "value": "1"
                                                },
                                                "id": 169,
                                                "name": "Literal",
                                                "src": "1950:1:0"
                                              }
                                            ],
                                            "id": 170,
                                            "name": "BinaryOperation",
                                            "src": "1946:5:0"
                                          }
                                        ],
                                        "id": 171,
                                        "name": "IndexAccess",
                                        "src": "1939:13:0"
                                      }
                                    ],
                                    "id": 172,
                                    "name": "VariableDeclarationStatement",
                                    "src": "1914:38:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "struct Dex.Order storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 107,
                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                  "value": "orders"
                                                },
                                                "id": 173,
                                                "name": "Identifier",
                                                "src": "1969:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "-",
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 132,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 174,
                                                    "name": "Identifier",
                                                    "src": "1976:1:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "31",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 1",
                                                      "value": "1"
                                                    },
                                                    "id": 175,
                                                    "name": "Literal",
                                                    "src": "1980:1:0"
                                                  }
                                                ],
                                                "id": 176,
                                                "name": "BinaryOperation",
                                                "src": "1976:5:0"
                                              }
                                            ],
                                            "id": 177,
                                            "name": "IndexAccess",
                                            "src": "1969:13:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 107,
                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                  "value": "orders"
                                                },
                                                "id": 178,
                                                "name": "Identifier",
                                                "src": "1985:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 132,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 179,
                                                "name": "Identifier",
                                                "src": "1992:1:0"
                                              }
                                            ],
                                            "id": 180,
                                            "name": "IndexAccess",
                                            "src": "1985:9:0"
                                          }
                                        ],
                                        "id": 181,
                                        "name": "Assignment",
                                        "src": "1969:25:0"
                                      }
                                    ],
                                    "id": 182,
                                    "name": "ExpressionStatement",
                                    "src": "1969:25:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "struct Dex.Order storage ref"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 107,
                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                  "value": "orders"
                                                },
                                                "id": 183,
                                                "name": "Identifier",
                                                "src": "2011:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 132,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 184,
                                                "name": "Identifier",
                                                "src": "2018:1:0"
                                              }
                                            ],
                                            "id": 185,
                                            "name": "IndexAccess",
                                            "src": "2011:9:0"
                                          },
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 166,
                                              "type": "struct Dex.Order memory",
                                              "value": "swapOrder"
                                            },
                                            "id": 186,
                                            "name": "Identifier",
                                            "src": "2023:9:0"
                                          }
                                        ],
                                        "id": 187,
                                        "name": "Assignment",
                                        "src": "2011:21:0"
                                      }
                                    ],
                                    "id": 188,
                                    "name": "ExpressionStatement",
                                    "src": "2011:21:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "--",
                                          "prefix": false,
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 132,
                                              "type": "uint256",
                                              "value": "i"
                                            },
                                            "id": 189,
                                            "name": "Identifier",
                                            "src": "2049:1:0"
                                          }
                                        ],
                                        "id": 190,
                                        "name": "UnaryOperation",
                                        "src": "2049:3:0"
                                      }
                                    ],
                                    "id": 191,
                                    "name": "ExpressionStatement",
                                    "src": "2049:3:0"
                                  }
                                ],
                                "id": 192,
                                "name": "Block",
                                "src": "1798:270:0"
                              }
                            ],
                            "id": 193,
                            "name": "WhileStatement",
                            "src": "1785:283:0"
                          }
                        ],
                        "id": 194,
                        "name": "Block",
                        "src": "1774:307:0"
                      },
                      {
                        "attributes": {},
                        "children": [
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_Side_$11",
                                "typeString": "enum Dex.Side"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "enum Dex.Side",
                                  "value": "side"
                                },
                                "id": 195,
                                "name": "Identifier",
                                "src": "2200:4:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "SELL",
                                  "type": "enum Dex.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "type(enum Dex.Side)",
                                      "value": "Side"
                                    },
                                    "id": 196,
                                    "name": "Identifier",
                                    "src": "2208:4:0"
                                  }
                                ],
                                "id": 197,
                                "name": "MemberAccess",
                                "src": "2208:9:0"
                              }
                            ],
                            "id": 198,
                            "name": "BinaryOperation",
                            "src": "2200:17:0"
                          },
                          {
                            "children": [
                              {
                                "children": [
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": ">",
                                      "type": "bool"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 132,
                                          "type": "uint256",
                                          "value": "i"
                                        },
                                        "id": 199,
                                        "name": "Identifier",
                                        "src": "2240:1:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "30",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "number",
                                          "type": "int_const 0",
                                          "value": "0"
                                        },
                                        "id": 200,
                                        "name": "Literal",
                                        "src": "2244:1:0"
                                      }
                                    ],
                                    "id": 201,
                                    "name": "BinaryOperation",
                                    "src": "2240:5:0"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {},
                                        "children": [
                                          {
                                            "attributes": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "<",
                                              "type": "bool"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 107,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 202,
                                                        "name": "Identifier",
                                                        "src": "2267:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "operator": "-",
                                                          "type": "uint256"
                                                        },
                                                        "children": [
                                                          {
                                                            "attributes": {
                                                              "overloadedDeclarations": [
                                                                null
                                                              ],
                                                              "referencedDeclaration": 132,
                                                              "type": "uint256",
                                                              "value": "i"
                                                            },
                                                            "id": 203,
                                                            "name": "Identifier",
                                                            "src": "2274:1:0"
                                                          },
                                                          {
                                                            "attributes": {
                                                              "hexvalue": "31",
                                                              "isConstant": false,
                                                              "isLValue": false,
                                                              "isPure": true,
                                                              "lValueRequested": false,
                                                              "token": "number",
                                                              "type": "int_const 1",
                                                              "value": "1"
                                                            },
                                                            "id": 204,
                                                            "name": "Literal",
                                                            "src": "2278:1:0"
                                                          }
                                                        ],
                                                        "id": 205,
                                                        "name": "BinaryOperation",
                                                        "src": "2274:5:0"
                                                      }
                                                    ],
                                                    "id": 206,
                                                    "name": "IndexAccess",
                                                    "src": "2267:13:0"
                                                  }
                                                ],
                                                "id": 207,
                                                "name": "MemberAccess",
                                                "src": "2267:19:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "member_name": "price",
                                                  "referencedDeclaration": 23,
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "type": "struct Dex.Order storage ref"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 107,
                                                          "type": "struct Dex.Order storage ref[] storage pointer",
                                                          "value": "orders"
                                                        },
                                                        "id": 208,
                                                        "name": "Identifier",
                                                        "src": "2289:6:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 132,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 209,
                                                        "name": "Identifier",
                                                        "src": "2296:1:0"
                                                      }
                                                    ],
                                                    "id": 210,
                                                    "name": "IndexAccess",
                                                    "src": "2289:9:0"
                                                  }
                                                ],
                                                "id": 211,
                                                "name": "MemberAccess",
                                                "src": "2289:15:0"
                                              }
                                            ],
                                            "id": 212,
                                            "name": "BinaryOperation",
                                            "src": "2267:37:0"
                                          },
                                          {
                                            "children": [
                                              {
                                                "id": 213,
                                                "name": "Break",
                                                "src": "2324:5:0"
                                              }
                                            ],
                                            "id": 214,
                                            "name": "Block",
                                            "src": "2305:42:0"
                                          }
                                        ],
                                        "id": 215,
                                        "name": "IfStatement",
                                        "src": "2263:84:0"
                                      },
                                      {
                                        "attributes": {
                                          "assignments": [
                                            217
                                          ]
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "constant": false,
                                              "mutability": "mutable",
                                              "name": "swapOrder",
                                              "scope": 243,
                                              "stateVariable": false,
                                              "storageLocation": "memory",
                                              "type": "struct Dex.Order",
                                              "visibility": "internal"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "Order",
                                                  "referencedDeclaration": 24,
                                                  "type": "struct Dex.Order"
                                                },
                                                "id": 216,
                                                "name": "UserDefinedTypeName",
                                                "src": "2363:5:0"
                                              }
                                            ],
                                            "id": 217,
                                            "name": "VariableDeclaration",
                                            "src": "2363:22:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 107,
                                                  "type": "struct Dex.Order storage ref[] storage pointer",
                                                  "value": "orders"
                                                },
                                                "id": 218,
                                                "name": "Identifier",
                                                "src": "2388:6:0"
                                              },
                                              {
                                                "attributes": {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "operator": "-",
                                                  "type": "uint256"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 132,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 219,
                                                    "name": "Identifier",
                                                    "src": "2395:1:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "hexvalue": "31",
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "token": "number",
                                                      "type": "int_const 1",
                                                      "value": "1"
                                                    },
                                                    "id": 220,
                                                    "name": "Literal",
                                                    "src": "2399:1:0"
                                                  }
                                                ],
                                                "id": 221,
                                                "name": "BinaryOperation",
                                                "src": "2395:5:0"
                                              }
                                            ],
                                            "id": 222,
                                            "name": "IndexAccess",
                                            "src": "2388:13:0"
                                          }
                                        ],
                                        "id": 223,
                                        "name": "VariableDeclarationStatement",
                                        "src": "2363:38:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "=",
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": true,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 107,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 224,
                                                    "name": "Identifier",
                                                    "src": "2418:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "operator": "-",
                                                      "type": "uint256"
                                                    },
                                                    "children": [
                                                      {
                                                        "attributes": {
                                                          "overloadedDeclarations": [
                                                            null
                                                          ],
                                                          "referencedDeclaration": 132,
                                                          "type": "uint256",
                                                          "value": "i"
                                                        },
                                                        "id": 225,
                                                        "name": "Identifier",
                                                        "src": "2425:1:0"
                                                      },
                                                      {
                                                        "attributes": {
                                                          "hexvalue": "31",
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": true,
                                                          "lValueRequested": false,
                                                          "token": "number",
                                                          "type": "int_const 1",
                                                          "value": "1"
                                                        },
                                                        "id": 226,
                                                        "name": "Literal",
                                                        "src": "2429:1:0"
                                                      }
                                                    ],
                                                    "id": 227,
                                                    "name": "BinaryOperation",
                                                    "src": "2425:5:0"
                                                  }
                                                ],
                                                "id": 228,
                                                "name": "IndexAccess",
                                                "src": "2418:13:0"
                                              },
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 107,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 229,
                                                    "name": "Identifier",
                                                    "src": "2434:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 132,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 230,
                                                    "name": "Identifier",
                                                    "src": "2441:1:0"
                                                  }
                                                ],
                                                "id": 231,
                                                "name": "IndexAccess",
                                                "src": "2434:9:0"
                                              }
                                            ],
                                            "id": 232,
                                            "name": "Assignment",
                                            "src": "2418:25:0"
                                          }
                                        ],
                                        "id": 233,
                                        "name": "ExpressionStatement",
                                        "src": "2418:25:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "=",
                                              "type": "struct Dex.Order storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": true,
                                                  "type": "struct Dex.Order storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 107,
                                                      "type": "struct Dex.Order storage ref[] storage pointer",
                                                      "value": "orders"
                                                    },
                                                    "id": 234,
                                                    "name": "Identifier",
                                                    "src": "2460:6:0"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 132,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 235,
                                                    "name": "Identifier",
                                                    "src": "2467:1:0"
                                                  }
                                                ],
                                                "id": 236,
                                                "name": "IndexAccess",
                                                "src": "2460:9:0"
                                              },
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 217,
                                                  "type": "struct Dex.Order memory",
                                                  "value": "swapOrder"
                                                },
                                                "id": 237,
                                                "name": "Identifier",
                                                "src": "2472:9:0"
                                              }
                                            ],
                                            "id": 238,
                                            "name": "Assignment",
                                            "src": "2460:21:0"
                                          }
                                        ],
                                        "id": 239,
                                        "name": "ExpressionStatement",
                                        "src": "2460:21:0"
                                      },
                                      {
                                        "children": [
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "operator": "--",
                                              "prefix": false,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 132,
                                                  "type": "uint256",
                                                  "value": "i"
                                                },
                                                "id": 240,
                                                "name": "Identifier",
                                                "src": "2498:1:0"
                                              }
                                            ],
                                            "id": 241,
                                            "name": "UnaryOperation",
                                            "src": "2498:3:0"
                                          }
                                        ],
                                        "id": 242,
                                        "name": "ExpressionStatement",
                                        "src": "2498:3:0"
                                      }
                                    ],
                                    "id": 243,
                                    "name": "Block",
                                    "src": "2246:271:0"
                                  }
                                ],
                                "id": 244,
                                "name": "WhileStatement",
                                "src": "2233:284:0"
                              }
                            ],
                            "id": 245,
                            "name": "Block",
                            "src": "2218:312:0"
                          }
                        ],
                        "id": 246,
                        "name": "IfStatement",
                        "src": "2197:333:0"
                      }
                    ],
                    "id": 247,
                    "name": "IfStatement",
                    "src": "1754:776:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 27,
                              "type": "uint256",
                              "value": "nextOrderId"
                            },
                            "id": 248,
                            "name": "Identifier",
                            "src": "2542:11:0"
                          }
                        ],
                        "id": 249,
                        "name": "UnaryOperation",
                        "src": "2542:13:0"
                      }
                    ],
                    "id": 250,
                    "name": "ExpressionStatement",
                    "src": "2542:13:0"
                  }
                ],
                "id": 251,
                "name": "Block",
                "src": "670:1889:0"
              }
            ],
            "id": 252,
            "name": "FunctionDefinition",
            "src": "585:1974:0"
          },
          {
            "attributes": {
              "functionSelector": "439370b1",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "depositEth",
              "scope": 335,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 253,
                "name": "ParameterList",
                "src": "2596:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 254,
                "name": "ParameterList",
                "src": "2616:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(bytes32 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 382,
                                      "type": "mapping(address => mapping(bytes32 => uint256))",
                                      "value": "balances"
                                    },
                                    "id": 255,
                                    "name": "Identifier",
                                    "src": "2626:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 256,
                                        "name": "Identifier",
                                        "src": "2635:3:0"
                                      }
                                    ],
                                    "id": 257,
                                    "name": "MemberAccess",
                                    "src": "2635:10:0"
                                  }
                                ],
                                "id": 262,
                                "name": "IndexAccess",
                                "src": "2626:20:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                          "typeString": "literal_string \"ETH\""
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes32)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "bytes32"
                                        },
                                        "id": 258,
                                        "name": "ElementaryTypeName",
                                        "src": "2647:7:0"
                                      }
                                    ],
                                    "id": 259,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2647:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "455448",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"ETH\"",
                                      "value": "ETH"
                                    },
                                    "id": 260,
                                    "name": "Literal",
                                    "src": "2655:5:0"
                                  }
                                ],
                                "id": 261,
                                "name": "FunctionCall",
                                "src": "2647:14:0"
                              }
                            ],
                            "id": 263,
                            "name": "IndexAccess",
                            "src": "2626:36:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 796,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(bytes32 => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 382,
                                              "type": "mapping(address => mapping(bytes32 => uint256))",
                                              "value": "balances"
                                            },
                                            "id": 264,
                                            "name": "Identifier",
                                            "src": "2665:8:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 4294967281,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 265,
                                                "name": "Identifier",
                                                "src": "2674:3:0"
                                              }
                                            ],
                                            "id": 266,
                                            "name": "MemberAccess",
                                            "src": "2674:10:0"
                                          }
                                        ],
                                        "id": 267,
                                        "name": "IndexAccess",
                                        "src": "2665:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "bytes32",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                                  "typeString": "literal_string \"ETH\""
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(bytes32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "bytes32"
                                                },
                                                "id": 268,
                                                "name": "ElementaryTypeName",
                                                "src": "2686:7:0"
                                              }
                                            ],
                                            "id": 269,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "2686:7:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 270,
                                            "name": "Literal",
                                            "src": "2694:5:0"
                                          }
                                        ],
                                        "id": 271,
                                        "name": "FunctionCall",
                                        "src": "2686:14:0"
                                      }
                                    ],
                                    "id": 272,
                                    "name": "IndexAccess",
                                    "src": "2665:36:0"
                                  }
                                ],
                                "id": 273,
                                "name": "MemberAccess",
                                "src": "2665:40:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 274,
                                    "name": "Identifier",
                                    "src": "2706:3:0"
                                  }
                                ],
                                "id": 275,
                                "name": "MemberAccess",
                                "src": "2706:9:0"
                              }
                            ],
                            "id": 276,
                            "name": "FunctionCall",
                            "src": "2665:51:0"
                          }
                        ],
                        "id": 277,
                        "name": "Assignment",
                        "src": "2626:90:0"
                      }
                    ],
                    "id": 278,
                    "name": "ExpressionStatement",
                    "src": "2626:90:0"
                  }
                ],
                "id": 279,
                "name": "Block",
                "src": "2616:107:0"
              }
            ],
            "id": 280,
            "name": "FunctionDefinition",
            "src": "2577:146:0"
          },
          {
            "attributes": {
              "functionSelector": "c311d049",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawEth",
              "scope": 335,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 334,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 281,
                        "name": "ElementaryTypeName",
                        "src": "2751:4:0"
                      }
                    ],
                    "id": 282,
                    "name": "VariableDeclaration",
                    "src": "2751:11:0"
                  }
                ],
                "id": 283,
                "name": "ParameterList",
                "src": "2750:13:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 284,
                "name": "ParameterList",
                "src": "2773:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_271c3e55fa0a5a0c2649b139a9fd1fc4c31e165def45c12f50f6ff995669c715",
                                  "typeString": "literal_string \"Insuffient balance\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 285,
                            "name": "Identifier",
                            "src": "2783:7:0"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "mapping(bytes32 => uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 382,
                                          "type": "mapping(address => mapping(bytes32 => uint256))",
                                          "value": "balances"
                                        },
                                        "id": 286,
                                        "name": "Identifier",
                                        "src": "2791:8:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 287,
                                            "name": "Identifier",
                                            "src": "2800:3:0"
                                          }
                                        ],
                                        "id": 288,
                                        "name": "MemberAccess",
                                        "src": "2800:10:0"
                                      }
                                    ],
                                    "id": 289,
                                    "name": "IndexAccess",
                                    "src": "2791:20:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes32",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                              "typeString": "literal_string \"ETH\""
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(bytes32)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "bytes32"
                                            },
                                            "id": 290,
                                            "name": "ElementaryTypeName",
                                            "src": "2812:7:0"
                                          }
                                        ],
                                        "id": 291,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "2812:7:0"
                                      },
                                      {
                                        "attributes": {
                                          "hexvalue": "455448",
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "token": "string",
                                          "type": "literal_string \"ETH\"",
                                          "value": "ETH"
                                        },
                                        "id": 292,
                                        "name": "Literal",
                                        "src": "2820:5:0"
                                      }
                                    ],
                                    "id": 293,
                                    "name": "FunctionCall",
                                    "src": "2812:14:0"
                                  }
                                ],
                                "id": 294,
                                "name": "IndexAccess",
                                "src": "2791:36:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 282,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 295,
                                "name": "Identifier",
                                "src": "2831:6:0"
                              }
                            ],
                            "id": 296,
                            "name": "BinaryOperation",
                            "src": "2791:46:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "496e7375666669656e742062616c616e6365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Insuffient balance\"",
                              "value": "Insuffient balance"
                            },
                            "id": 297,
                            "name": "Literal",
                            "src": "2838:20:0"
                          }
                        ],
                        "id": 298,
                        "name": "FunctionCall",
                        "src": "2783:76:0"
                      }
                    ],
                    "id": 299,
                    "name": "ExpressionStatement",
                    "src": "2783:76:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(bytes32 => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 382,
                                      "type": "mapping(address => mapping(bytes32 => uint256))",
                                      "value": "balances"
                                    },
                                    "id": 300,
                                    "name": "Identifier",
                                    "src": "2869:8:0"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 301,
                                        "name": "Identifier",
                                        "src": "2878:3:0"
                                      }
                                    ],
                                    "id": 302,
                                    "name": "MemberAccess",
                                    "src": "2878:10:0"
                                  }
                                ],
                                "id": 307,
                                "name": "IndexAccess",
                                "src": "2869:20:0"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes32",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                          "typeString": "literal_string \"ETH\""
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes32)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "bytes32"
                                        },
                                        "id": 303,
                                        "name": "ElementaryTypeName",
                                        "src": "2890:7:0"
                                      }
                                    ],
                                    "id": 304,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "2890:7:0"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "455448",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "string",
                                      "type": "literal_string \"ETH\"",
                                      "value": "ETH"
                                    },
                                    "id": 305,
                                    "name": "Literal",
                                    "src": "2898:5:0"
                                  }
                                ],
                                "id": 306,
                                "name": "FunctionCall",
                                "src": "2890:14:0"
                              }
                            ],
                            "id": 308,
                            "name": "IndexAccess",
                            "src": "2869:36:0"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 818,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "type": "mapping(bytes32 => uint256)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 382,
                                              "type": "mapping(address => mapping(bytes32 => uint256))",
                                              "value": "balances"
                                            },
                                            "id": 309,
                                            "name": "Identifier",
                                            "src": "2908:8:0"
                                          },
                                          {
                                            "attributes": {
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "sender",
                                              "type": "address payable"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 4294967281,
                                                  "type": "msg",
                                                  "value": "msg"
                                                },
                                                "id": 310,
                                                "name": "Identifier",
                                                "src": "2917:3:0"
                                              }
                                            ],
                                            "id": 311,
                                            "name": "MemberAccess",
                                            "src": "2917:10:0"
                                          }
                                        ],
                                        "id": 312,
                                        "name": "IndexAccess",
                                        "src": "2908:20:0"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "tryCall": false,
                                          "type": "bytes32",
                                          "type_conversion": true
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_aaaebeba3810b1e6b70781f14b2d72c1cb89c0b2b320c43bb67ff79f562f5ff4",
                                                  "typeString": "literal_string \"ETH\""
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "type": "type(bytes32)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "name": "bytes32"
                                                },
                                                "id": 313,
                                                "name": "ElementaryTypeName",
                                                "src": "2929:7:0"
                                              }
                                            ],
                                            "id": 314,
                                            "name": "ElementaryTypeNameExpression",
                                            "src": "2929:7:0"
                                          },
                                          {
                                            "attributes": {
                                              "hexvalue": "455448",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "token": "string",
                                              "type": "literal_string \"ETH\"",
                                              "value": "ETH"
                                            },
                                            "id": 315,
                                            "name": "Literal",
                                            "src": "2937:5:0"
                                          }
                                        ],
                                        "id": 316,
                                        "name": "FunctionCall",
                                        "src": "2929:14:0"
                                      }
                                    ],
                                    "id": 317,
                                    "name": "IndexAccess",
                                    "src": "2908:36:0"
                                  }
                                ],
                                "id": 318,
                                "name": "MemberAccess",
                                "src": "2908:40:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 282,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 319,
                                "name": "Identifier",
                                "src": "2949:6:0"
                              }
                            ],
                            "id": 320,
                            "name": "FunctionCall",
                            "src": "2908:48:0"
                          }
                        ],
                        "id": 321,
                        "name": "Assignment",
                        "src": "2869:87:0"
                      }
                    ],
                    "id": 322,
                    "name": "ExpressionStatement",
                    "src": "2869:87:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple(bool,bytes memory)",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function (bytes memory) payable returns (bool,bytes memory)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "call",
                                  "type": "function (bytes memory) payable returns (bool,bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 323,
                                        "name": "Identifier",
                                        "src": "2966:3:0"
                                      }
                                    ],
                                    "id": 326,
                                    "name": "MemberAccess",
                                    "src": "2966:10:0"
                                  }
                                ],
                                "id": 327,
                                "name": "MemberAccess",
                                "src": "2966:15:0"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 282,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 328,
                                "name": "Identifier",
                                "src": "2988:6:0"
                              }
                            ],
                            "id": 329,
                            "name": "FunctionCallOptions",
                            "src": "2966:29:0"
                          },
                          {
                            "attributes": {
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 330,
                            "name": "Literal",
                            "src": "2996:2:0"
                          }
                        ],
                        "id": 331,
                        "name": "FunctionCall",
                        "src": "2966:33:0"
                      }
                    ],
                    "id": 332,
                    "name": "ExpressionStatement",
                    "src": "2966:33:0"
                  }
                ],
                "id": 333,
                "name": "Block",
                "src": "2773:233:0"
              }
            ],
            "id": 334,
            "name": "FunctionDefinition",
            "src": "2730:276:0"
          }
        ],
        "id": 335,
        "name": "ContractDefinition",
        "src": "96:2917:0"
      }
    ],
    "id": 336,
    "name": "SourceUnit",
    "src": "0:3015:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x3F0431B4D908339285A421FEEcEBbeA8601bB022",
      "transactionHash": "0xc34e495b38c0170919221b651c7de3a7156e5b3e66ca8c84d6e856dcf02ae13b"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-13T10:46:23.455Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}